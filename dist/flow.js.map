{"version":3,"sources":["wrap-start.js","nflow.js","carry.js","connect.js","create.js","emit.js","identify.js","listen.js","log.js","consts.js","utils.js","wrap-end.js"],"names":[],"mappings":"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","file":"flow.js","sourcesContent":["(function (scope){\n","\nvar create = (defaults, name, data)=>{\n  var flow = defaults.factory()\n\n  defaults\n    .behaviours\n    .forEach((d)=>d(flow, defaults, name, data))\n\n  \n  return flow\n}\n\nvar behaviours = {}","  behaviours.carry = (flow, defaults, name, data)=>{\n    flow.data = (...data) => {\n    if (!data.length) {\n      return (flow.data.value.length<=1)\n        ? flow.data.value[0]\n        : flow.data.value\n      }\n    return flow.data.value = data, flow\n    }\n    flow.data.value = data\n  }","behaviours.connect = (flow)=>{\n  flow.parent = (parent=UNSET) => {\n    if (parent===UNSET) return flow.parent.value;\n    parent && assert(!isFlow(parent), ERRORS.invalidParent, parent)\n    flow.parent()\n      && flow.parent().children.detach(flow)\n    attach(parent)  \n    return flow\n  }\n  \n  flow.parents = (...args)=>{\n    assert(args.length, ERRORS.invalidParents)\n    var parentMap = {}\n    var parents = []\n    var p = flow.parent()\n    while (p && !parentMap[p.guid()]){\n      parents.push(p)\n      parentMap[p.guid()]=true\n      p = p.parent()\n    }\n    return parents \n  }\n\n  flow.children = (...args) => {\n    assert(args.length, ERRORS.invalidChildren)\n    return flow.children.value.concat()\n  }\n  flow.children.value = []\n\n\n  flow.children.detach = (child)=>{\n    flow.children.value = \n      flow.children.value\n        .filter(f=>f!=child)\n  }\n\n  function attach(parent) {\n    parent && parent.children.value.push(flow)\n    flow.parent.value = parent\n  }\n\n}","behaviours.create = (flow, defaults)=>{\n\n  flow.create = (name, ...data) => {\n    var instance = create(flow.create.defaults, name, data)\n    instance.parent(flow)\n    return instance\n  }\n\n  flow.create.defaults = {\n    factory: defaults.factory,\n    behaviours: defaults.behaviours.concat(),\n    direction: defaults.direction\n\n  }\n\n}","behaviours.emit = (flow)=>{\n  \n  flow.status = (...args) => {\n    assert(args.length\n         , ERRORS.invalidStatus)\n    return flow.status.value\n  }\n  flow.status.value = STATUS.IDLE\n\n  flow.direction = (...args) => {\n    assert(args.length\n         , ERRORS.invalidStatus)\n    return flow.direction.value\n  }\n  flow.direction.value = flow.create.defaults.direction\n\n  flow.emit = (name=UNSET, ...args) => {\n    if (name==UNSET) {\n      // emit current flow object\n      emit(flow)\n      return flow\n    }\n    if (isFlow(name)) {\n      //1. reparent the passed in flow object where it's emitted from\n      name.parent(flow)\n\n      //2.  emit the passed in flow object\n      emit(name)\n      return flow\n    }\n\n    assert(typeof(name)!='string'\n      , ERRORS.invalidEventName)\n    \n    var event = flow.create(name, ...args)\n    emit(event)\n    return event\n  }\n\n  function emit(flow){\n    // 1. detach from parent\n    console.log(\"emitting\", flow.name())\n    flow.parent() \n      && flow.parent().children.detach(flow)\n\n    // 2. reset status\n    flow.emit.recipients = []\n    flow.emit.recipientMap = {}\n    flow.status.value = STATUS.FLOWING;\n    flowTo(flow, flow) // start dispatching foer itself\n\n  }\n\n  function flowTo(flow, destination){\n    if (flow.status() != STATUS.FLOWING) return;\n    notify(flow, destination)\n    //console.log('next:', getNextFlowDestination(flow, destination))\n    getNextFlowDestination(flow, destination)\n      //.filter(f=>flow.emit.recipientMap[f.guid()]) //only deliver to a node once\n      .filter(Boolean) //ignore null parents\n      //TODO filter by cached listeners\n      .forEach(destination=>{flowTo(flow, destination)})\n  }\n\n  function notify(flow, currentNode){\n    if (flow.emit.recipientMap[currentNode.guid()] == flow.direction()) {\n      // we already checked this node\n      return;\n    }\n    flow.emit.recipients.push(currentNode)\n    flow.emit.recipientMap[currentNode.guid()] = flow.direction()\n    currentNode.on.notifyListeners(flow)\n  }\n\n\n  function getNextFlowDestination(flow, currentNode){\n    return {\n      NONE: [currentNode],\n      UPSTREAM: [currentNode.parent()],\n      DEFAULT: [currentNode.parent()],\n      DOWNSTREAM: currentNode.children()\n    }[flow.direction()]\n  }\n\n\n}","var guid = 0\nbehaviours.identify = (flow, defaults, name)=>{\n  \n  flow.guid = (...args) => {\n    assert(args.length\n         , ERRORS.invalidGuid)\n    return flow.guid.value\n  }\n  flow.guid.value = \"\"+guid++\n\n  flow.name = (name=UNSET) => {\n    if (name===UNSET) return flow.name.value\n    assert(typeof(name)!=\"string\"\n         , ERRORS.invalidName, name)\n    return flow.name.value = name, flow\n  }\n  flow.name(name || flow.guid())\n  flow.name.isFlow = true\n\n}","behaviours.listen = (flow)=>{\n  var listenerMap = {};\n  flow.on = (name=UNSET, ...args) => {\n    if (name==UNSET) return listenerMap //TODO clone this!\n    assert(typeof(name)!='string'\n      , ERRORS.invalidListener)\n    \n    if (!args.length) {\n      return listenerMap[name] //TODO clone this\n    }\n\n    if (args.length==1 && args[0]==null) {\n      delete listenerMap[name]\n      return flow;\n    }\n    listenerMap[name] = args\n      .filter(l=>!assert(typeof(l)!='function'\n        , ERRORS.invalidListener)\n      )\n    console.log(\"adding listener\", name, 'to', flow.name(), flow.guid())\n    return flow\n  }\n\n  flow.on.notifyListeners = (event)=>{\n    console.log(\"notifying\", event.name(), 'to', flow.name(), flow.guid())\n    if (listenerMap[event.name()]) {\n      listenerMap[event.name()]\n        .every(listener=>{\n          listener(...event.data.value)\n          return (flow.status() == STATUS.FLOWING)\n        })\n    }\n  }\n\n\n  //TODO cache listeners\n}","behaviours.log = (flow)=>{\n  \n  flow.toString = () => {\n    return \"{ Object Flow }\"\n  }\n}","/**\n *  consts\n */\nconst UNSET = {}\nconst DIRECTION = {\n  NONE: \"NONE\",\n  DEFAULT: \"DEFAULT\",\n  UPSTREAM: \"UPSTREAM\",\n  DOWNSTREAM: \"DOWNSTREAM\"\n}\n\nconst STATUS = {\n  IDLE: \"IDLE\",\n  FLOWING: \"FLOWING\",\n  STOPPED: \"STOPPED\",\n  COMPLETED: \"COMPLETED\",\n  CANCELLED: \"CANCELLED\"\n}\n\nconst DEFAULTS = {\n  factory: ()=>({}),\n  behaviours:[\n    behaviours.identify,\n    behaviours.carry,\n    behaviours.connect,\n    behaviours.create,\n    behaviours.emit,\n    behaviours.listen,\n    behaviours.log\n  ],\n  direction: DIRECTION.DEFAULT\n}\nconst ERRORS = {\n  invalidGuid:     'Invalid Argument. Guid-s are immutable. Please use the .name() API to change the name of a flow object.'\n, invalidChildren: 'Invalid Argument. Please use child.parent(parent) to re-parent flow objects.'\n, invalidListener: 'Invalid Arguments. Please use .on(\"foo\", handler) to create a listener.'\n, invalidEventName:'Invalid Arguments. Please use .emit(\"foo\", payload) to emit a flow event.'\n, invalidName:'Invalid flow Name. Expected a String value, got: %s'\n, invalidParent:'Invalid flow parent object. Expected a flow instance, got: %s'\n, invalidParents:'Invalid Argument. Please use the child.parent(parent) API to re-parent flow objects.'\n, invalidStatus:'Invalid Argument. The .status() API is read only'\n}","/**\n *  utils\n */\nfunction assert(condition, error, val){\n  if (condition) {\n    throw new Error(error\n      .replace(\"%s\", val))\n  }\n  return condition\n}\n\n\nfunction isFlow(flow){\n  return flow \n    && flow.name\n    && flow.name.isFlow\n}","  var instance = create(DEFAULTS, \"flow\")\n\n  if (typeof define === 'function' && define.amd) {\n        // AMD. Register as an anonymous module.\n        define([], ()=>instance);\n    } else if (typeof module === 'object' && module.exports) {\n        // Node. Does not work with strict CommonJS, but\n        // only CommonJS-like environments that support module.exports,\n        // like Node.\n        module.exports = instance;\n    } else {\n        // Browser globals (\"this\" is window)\n        scope[\"this\"].flow = instance\n    }\n}({this}))"],"sourceRoot":"/source/"}