{"version":3,"sources":["webpack:///webpack/bootstrap 956a2143dcc7b149f9cf","webpack:///./src/index.js","webpack:///./src/nflow.js","webpack:///./src/factory.js","webpack:///./src/behaviours/index.js","webpack:///./src/behaviours/cancellable.js","webpack:///./src/consts.js","webpack:///./src/utils/index.js","webpack:///./src/utils/serialiser.js","webpack:///./src/logger.js","webpack:///./src/behaviours/connect.js","webpack:///./src/behaviours/create.js","webpack:///./src/behaviours/emit.js","webpack:///./src/routes/index.js","webpack:///./src/routes/upstream.js","webpack:///./src/routes/current.js","webpack:///./src/routes/downstream.js","webpack:///./src/routes/default.js","webpack:///./src/behaviours/identify.js","webpack:///./src/behaviours/listen.js","webpack:///./src/behaviours/loggable.js","webpack:///./src/behaviours/stateful.js","webpack:///./src/behaviours/stats.js","webpack:///./src/behaviours/disposable.js","webpack:///./src/behaviours/namespace.js"],"names":["global","nflow","nFlow","module","exports","root","init","defaults","name","data","flow","factory","behaviours","forEach","d","cancellable","connect","create","disposable","emit","identify","listen","loggable","stateful","stats","namespace","cancel","length","invalidCancelArgs","previousValue","value","isCancelled","concat","parents","some","e","status","CANCELLED","DISPOSED","stopPropagation","direction","toUpperCase","invalidStopPropagationArgs","set","STOPPED","targets","modifiers","target","guid","createStopPropagationModifiers","propagationStopped","Object","keys","toLowerCase","UNSET","DIRECTION","CURRENT","NONE","DEFAULT","UPSTREAM","DOWNSTREAM","DIRECTION_BITMASK","STATUS","IDLE","FLOWING","COMPLETED","DEFAULTS","ERRORS","invalidGuid","invalidChildren","invalidListener","invalidListenerType","invalidEventName","invalidName","invalidParent","invalidParents","invalidStatus","invalidNamespaceArgs","invalidFullNamespace","invalidDisposeArgs","invalidStopPropagationAugmentation","invalidRoot","invalidStatsArgs","NS_SEPARATOR","serialise","assert","isFlow","isInternal","createMatcher","getLocalName","detach","isDetached","flatten","merge","invalidateListenerCache","dispatchInternalEvent","condition","error","val","Error","replace","matcher","undefined","f","test","split","pop","parent","children","has","array","apply","source","key","updateListenerCache","node","on","listenerCache","listenerMap","newData","oldData","isIgnored","current","up","upstream","down","downstream","log","ignore","JSON","stringify","o","replacer","RECURSION_LIMIT","stack","r","i","parseValue","indexOf","push","Array","join","slice","loggers","isRemote","logger","remoteLog","debug","__nflow_devtools_hook__","propMap","d0","toObj","action","props","enableDevTools","enabled","console","warn","reset","recursive","find","all","filter","findAll","get","getAll","childMap","getChildren","c","gc","map","previousParent","attach","parentMap","p","child","instance","inheritStats","once","nodeDefaults","dispose","oldDirection","args","recipients","recipientsMap","createEmitAPI","route","event","localName","destination","shift","notify","currentNode","isUnreachable","result","notifyListeners","routeMap","reduce","none","match","arr","visitedNodesMap","dir","nodes","visited","createGuid","previousName","cache","call","functions","Math","random","v","toString","oldListeners","l","handlers","listeners","shouldDeliver","listenerName","deliverToHandlers","listener","a","b","hasProp","prop","add","valueF","obj","version","h","previousStats","collapsed","path","reverse","implicit","explicit","ns","full","listenerNode","isLocalNameMatch","id","isNamespaceMatch","localise","nameFrom","localisedNameTo","fullIDs","explicitIDs","every","foundSegment","segment","segments","receiverName","receiverLocalName"],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;;;ACtCA;;;;;;AACA,KAAIA,MAAJ,EAAYA,OAAOC,KAAP,GAAeD,OAAOE,KAAP,qBAAf,C,CAAoC;AAChDC,QAAOC,OAAP,sB;;;;;;;;;;;;;ACFA;;;;AACA;;AACA;;;;;;AAEA,KAAIC,OAAO,4CAAkB,MAAlB,EAA0B,EAA1B,CAAX;AACA,qBAAOC,IAAP,CAAYD,IAAZ;sBACeA,I;;;;;;;;;;;;ACNf;;;;;;sBACe,UAACE,QAAD,EAAWC,IAAX,EAAiBC,IAAjB,EAA0B;AACrC;AACF;;;;;;;;;;;AAWE;AACF,OAAIC,OAAOH,SAASI,OAAT,EAAX;;AAEAJ,YACGK,UADH,CAEGC,OAFH,CAEW,UAACC,CAAD,EAAO;AACd,6BAAWA,CAAX,EAAcJ,IAAd,EAAoBH,QAApB,EAA8BC,IAA9B,EAAoCC,IAApC;AACD,IAJH;AAKA,UAAOC,IAAP;AACD,E;;;;;;;;;;;;ACvBD;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;sBAEe;AACbK,wCADa;AAEbC,gCAFa;AAGbC,8BAHa;AAIbC,sCAJa;AAKbC,0BALa;AAMbC,kCANa;AAObC,8BAPa;AAQbC,kCARa;AASbC,kCATa;AAUbC,4BAVa;AAWbC;AAXa,E;;;;;;;;;;;;ACZf;;AAKA;;sBAEe,UAACf,IAAD,EAAOH,QAAP,EAAiBC,IAAjB,EAA0B;AACvC;;;;;;;;;;;;;;;;;;;;;;AAsBAE,QAAKgB,MAAL,GAAc,YAAa;AACzB,wBAAO,UAAKC,MAAZ,EACO,eAAOC,iBADd;AAEA,SAAIC,gBAAgBnB,KAAKgB,MAAL,CAAYI,KAAhC;AACApB,UAAKgB,MAAL,CAAYI,KAAZ,GAAoB,IAApB;AACA;;;;;;;;;;AAUA;;;;;;;AAOA;;;;;;;;AAQA,uCAAsBpB,IAAtB,EAA4B,QAA5B,EAAsC,IAAtC,EAA4CmB,aAA5C;AACA,YAAOnB,IAAP;AACD,IAhCD;AAiCAA,QAAKgB,MAAL,CAAYI,KAAZ,GAAoB,KAApB;;AAEA;;;;;AAKApB,QAAKqB,WAAL,GAAmB,YAAM;AACvB,YAAO,CAACrB,IAAD,EACJsB,MADI,CACGtB,KAAKuB,OAAL,EADH,EAEJC,IAFI,CAEC;AAAA,cAAKC,EAAEC,MAAF,OAAe,eAAOC,SAAtB,IACRF,EAAEC,MAAF,OAAe,eAAOE,QADnB;AAAA,MAFD,CAAP;AAID,IALD;;AAOA;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2BA5B,QAAK6B,eAAL,GAAuB,YAAuB;AAAA,SAAtBC,SAAsB;;AAC5CA,oCAAuB,mBAAO,CAAC,kBAAUA,UAAUC,WAAV,EAAV,CAAR,EAChB,eAAOC,0BADS,CAAvB;;AAGA,SAAIF,2BAAJ,EAAyB;AACvB9B,YAAK0B,MAAL,CAAYO,GAAZ,CAAgB,eAAOC,OAAvB;AACAlC,YAAKS,IAAL,CAAU0B,OAAV,GAAoB,EAApB;AACAnC,YAAK6B,eAAL,CAAqBT,KAArB,GAA6B,IAA7B;AACApB,YAAK6B,eAAL,CAAqBO,SAArB,CAA+BpC,KAAKqC,MAAL,CAAYC,IAA3C,IAAmD,CAAC,CAApD,CAJuB,CAI+B;AACtD;;;;;;;;;;AAUA;;;;;;;AAOA;;;;;;;;AAQA,yCAAsBtC,IAAtB,EAA4B,oBAA5B,EAAkD,IAAlD;AACD,MA/BD,MA+BO;AACL,WAAII,IAAI,kBAAU0B,UAAUC,WAAV,EAAV,CAAR;AACA;;;;;;;;;;;AAWA;;;;;;;;;;AAUA;;;;;;;;;;;AAWA,yCAAsB/B,IAAtB,EAA4B,sBAA5B,EAAoD;AAClD8B,oBAAW1B,CADuC;AAElDiC,iBAAQrC,KAAKqC;AAFqC,QAApD;AAIArC,YAAK6B,eAAL,CAAqBO,SAArB,CAA+BpC,KAAKqC,MAAL,CAAYC,IAAZ,CAAiBlB,KAAhD,KAA0D,0BAAkBhB,CAAlB,CAA1D;AACD;AACD,YAAOJ,IAAP;AACD,IA5ED;;AA8EAA,QAAK6B,eAAL,CAAqBT,KAArB,GAA6B,KAA7B;AACApB,QAAK6B,eAAL,CAAqBO,SAArB,GAAiC,EAAjC;AACAG,kCAA+BvC,IAA/B;;AAEA;;;;;;;AAOAA,QAAKwC,kBAAL,GAA0B,YAAM;AAC9B,YAAOxC,KAAK6B,eAAL,CAAqBT,KAA5B;AACD,IAFD;AAGD,E;AACD;;;;;AAGA,UAASmB,8BAAT,CAAyCvC,IAAzC,EAA+C;AAC7CyC,UAAOC,IAAP,oBACGvC,OADH,CACW,qBAAa;AACpBH,UAAK6B,eAAL,CAAqBC,SAArB,IACA9B,KAAK6B,eAAL,CAAqBC,UAAUa,WAAV,EAArB,IACE;AAAA,cAAM3C,KAAK6B,eAAL,CAAqBC,SAArB,CAAN;AAAA,MAFF;AAGD,IALH;AAMD,E;;;;;;;;;;;AC/MM,KAAMc,wBAAQ,EAAd;;AAEP;;;;;;;;;;AAUO,KAAMC,gCAAY;AACvBC,YAAS,SADc;AAEvBC,SAAM,SAFiB,EAEN;AACjBC,YAAS,SAHc;AAIvBC,aAAU,UAJa;AAKvBC,eAAY;AALW,EAAlB;;AAQA,KAAMC,gDAAoB;AAC/BL,YAAS,KAAK,CADiB;AAE/BC,SAAM,KAAK,CAFoB,EAEjB;AACdC,YAAS,KAAK,CAHiB,EAGd;AACjBC,aAAU,KAAK,CAJgB,EAIb;AAClBC,eAAY,KAAK,CALc,CAKZ;AALY,EAA1B;;AAQP;;;;;;;;;;;;;AAaO,KAAME,0BAAS;AACpBC,SAAM,MADc;AAEpBC,YAAS,SAFW;AAGpBpB,YAAS,SAHW;AAIpBqB,cAAW,WAJS;AAKpB5B,cAAW,WALS;AAMpBC,aAAU;AANU,EAAf;;AASA,KAAM4B,8BAAW;AACtBvD,YAAS;AAAA,YAAO,EAAP;AAAA,IADa;AAEtBC,eAAY,CACV,UADU,EAEV,UAFU,EAGV,SAHU,EAIV,QAJU,EAKV,YALU,EAMV,MANU,EAOV,QAPU,EAQV,aARU,EASV,UATU,EAUV,OAVU,EAWV,WAXU,CAFU;AAetB4B,cAAWe,UAAUG;AAfC,EAAjB;AAiBA,KAAMS,0BAAS;AACpBC,gBAAa,yGADO;AAEpBC,oBAAiB,8EAFG;AAGpBC,oBAAiB,mEAHG;AAIpBC,wBAAqB,yDAJD;AAKpBC,qBAAkB,2EALE;AAMpBC,gBAAa,qDANO;AAOpBC,kBAAe,+DAPK;AAQpBC,mBAAgB,sFARI;AASpBC,kBAAe,kDATK;AAUpBC,yBAAsB,qDAVF;AAWpBC,yBAAsB,0FAXF;AAYpBC,uBAAoB,6DAZA;AAapBnD,sBAAmB,4DAbC;AAcpBc,+BAA4B,4IAdR;AAepBsC,uCAAoC,2FAfhB;AAgBpBC,gBAAa,wDAhBO;AAiBpBC,qBAAkB;AAjBE,EAAf;;AAoBA,KAAMC,sCAAe,GAArB,C;;;;;;;;;;;;;;;;;;;;wBClFCC,S;;;SAIQC,M,GAAAA,M;SAQAC,M,GAAAA,M;SAMAC,U,GAAAA,U;SAMAC,a,GAAAA,a;SAsBAC,Y,GAAAA,Y;SAMAC,M,GAAAA,M;SAKAC,U,GAAAA,U;SAKAC,O,GAAAA,O;SAIAC,K,GAAAA,K;SAMAC,uB,GAAAA,uB;SAkBAC,qB,GAAAA,qB;;AA/FhB;;;;AACA;;AAEA;;;;;;AAGA;;;AAGO,UAASV,MAAT,CAAiBW,SAAjB,EAA4BC,KAA5B,EAAmCC,GAAnC,EAAwC;AAC7C,OAAIF,SAAJ,EAAe;AACb,WAAM,IAAIG,KAAJ,CAAUF,MACbG,OADa,CACL,IADK,EACCF,GADD,CAAV,CAAN;AAED;AACD,UAAOF,SAAP;AACD;;AAEM,UAASV,MAAT,CAAiB5E,IAAjB,EAAuB;AAC5B,UAAOA,QACLA,KAAKF,IADA,IAELE,KAAKF,IAAL,CAAU8E,MAFZ;AAGD;;AAEM,UAASC,UAAT,CAAqB7E,IAArB,EAA2B;AAChC,UAAOA,QACLA,KAAKF,IADA,IAELE,KAAKF,IAAL,CAAU+E,UAFZ;AAGD;;AAEM,UAASC,aAAT,CAAwBa,OAAxB,EAAiC;AACtC;AACA,OAAIA,YAAY,IAAhB,EAAsB,OAAO;AAAA,YAAM,IAAN;AAAA,IAAP;AACtB;AACA,OAAIA,YAAY,IAAZ,IAAoBA,YAAYC,SAAhC,IAA6CD,YAAY,KAA7D,EAAoE,OAAO;AAAA,YAAM,KAAN;AAAA,IAAP;AACpE;AACA,OAAI,OAAQA,OAAR,KAAqB,QAAzB,EAAmC;AAAE,YAAO;AAAA,cAAKE,EAAE/F,IAAF,OAAa6F,OAAlB;AAAA,MAAP;AAAkC;AACvE;AACA,OAAI,QAAQA,OAAR,yCAAQA,OAAR,OAAqB,QAArB,IAAiCA,QAAQG,IAA7C,EAAmD,OAAO;AAAA,YAAKH,QAAQG,IAAR,CAAaD,EAAE/F,IAAF,EAAb,CAAL;AAAA,IAAP;AACnD;AACA,OAAI8E,OAAOe,OAAP,CAAJ,EAAqB,OAAO;AAAA,YAAKE,MAAMF,OAAX;AAAA,IAAP;AACrB;AACA,UAAOA,OAAP;AACD;;AAED;;;;;;;AAOO,UAASZ,YAAT,CAAuBjF,IAAvB,EAA6B;AAClC,UAAOA,KACJiG,KADI,uBAEJC,GAFI,EAAP;AAGD;;AAEM,UAAShB,MAAT,CAAiBhF,IAAjB,EAAuB;AAC5BA,QAAKiG,MAAL,MACAjG,KAAKiG,MAAL,GAAcC,QAAd,CAAuBlB,MAAvB,CAA8BhF,IAA9B,CADA;AAED;;AAEM,UAASiF,UAAT,CAAqBjF,IAArB,EAA2B;AAChC,UAAO,CAACA,KAAKiG,MAAL,EAAD,IACP,CAACjG,KAAKiG,MAAL,GAAcC,QAAd,CAAuBC,GAAvB,CAA2BnG,IAA3B,CADD;AAED;;AAEM,UAASkF,OAAT,CAAkBkB,KAAlB,EAAyB;AAC9B,UAAO,GAAG9E,MAAH,CAAU+E,KAAV,CAAgB,EAAhB,EAAoBD,KAApB,CAAP;AACD;;AAEM,UAASjB,KAAT,CAAgBmB,MAAhB,EAAwBjE,MAAxB,EAAgC;AACrCI,UAAOC,IAAP,CAAY4D,MAAZ,EAAoBnG,OAApB,CAA4B,eAAO;AACjCkC,YAAOkE,GAAP,IAAcD,OAAOC,GAAP,CAAd;AACD,IAFD;AAGD;;AAEM,UAASnB,uBAAT,CAAkCpF,IAAlC,EAAwC;AAC7C,OAAI,CAACA,IAAL,EAAW;AACXwG,uBAAoBxG,IAApB;AACAA,QAAKuB,OAAL,GAAepB,OAAf,CAAuBqG,mBAAvB;AACD;;AAED,UAASA,mBAAT,CAA8BC,IAA9B,EAAoC;AAClCA,QAAKC,EAAL,CAAQC,aAAR,GAAwB,EAAxB;AACA,QAAK,IAAIJ,GAAT,IAAgBE,KAAKC,EAAL,CAAQE,WAAxB,EAAqC;AACnCH,UAAKC,EAAL,CAAQC,aAAR,CAAsB5B,aAAawB,GAAb,CAAtB,IAA2C,IAA3C;AACD;AACDE,QAAKP,QAAL,CAAc9E,KAAd,CAAoBjB,OAApB,CAA4B,aAAK;AAC/B,UAAK,IAAIoG,IAAT,IAAgBV,EAAEa,EAAF,CAAKC,aAArB,EAAoC;AAClCF,YAAKC,EAAL,CAAQC,aAAR,CAAsB5B,aAAawB,IAAb,CAAtB,IAA2C,IAA3C;AACD;AACF,IAJD;AAKD;;AAEM,UAASlB,qBAAT,CAAgCrF,IAAhC,EAAsCF,IAAtC,EAA4C+G,OAA5C,EAAqDC,OAArD,EAA8D;AACnE,OAAIC,UAAU/G,IAAV,CAAJ,EAAqB;AACrB,OAAI4E,OAAOiC,OAAP,KAAmBA,QAAQ/G,IAAR,CAAa+E,UAApC,EAAgD;;AAEhD,OAAImC,UAAU,4CAAkB,UAAUlH,IAA5B,CAAd;AACAkH,WAAQlH,IAAR,CAAa+E,UAAb,GAA0B,IAA1B;AACAmC,WAAQjH,IAAR,CAAaqB,KAAb,GAAqB,CAACyF,OAAD,EAAUC,OAAV,CAArB;AACAE,WAAQf,MAAR,CAAe7E,KAAf,GAAuBpB,IAAvB;AACAgH,WAAQvG,IAAR,CAAauG,OAAb;;AAEA,OAAIC,KAAK,4CAAkB,mBAAmBnH,IAArC,CAAT;AACAmH,MAAGnH,IAAH,CAAQ+E,UAAR,GAAqB,IAArB;AACAoC,MAAGlH,IAAH,CAAQqB,KAAR,GAAgB,CAACpB,IAAD,EAAO6G,OAAP,EAAgBC,OAAhB,CAAhB;AACAG,MAAGhB,MAAH,CAAU7E,KAAV,GAAkBpB,KAAKiG,MAAL,EAAlB;AACAgB,MAAGxG,IAAH,CAAQyG,QAAR;;AAEA,OAAIC,OAAO,4CAAkB,iBAAiBrH,IAAnC,CAAX;AACAqH,QAAKrH,IAAL,CAAU+E,UAAV,GAAuB,IAAvB;AACAsC,QAAKpH,IAAL,CAAUqB,KAAV,GAAkB,CAACpB,IAAD,EAAO6G,OAAP,EAAgBC,OAAhB,CAAlB;AACA9G,QAAKkG,QAAL,CAAc9E,KAAd,CAAoBjB,OAApB,CAA4B;AAAA,YAAK0F,EAAEpF,IAAF,CAAO2G,UAAP,CAAkBD,IAAlB,CAAL;AAAA,IAA5B;;AAEA,uBAAOE,GAAP,CAAWrH,IAAX,EAAiBF,IAAjB,EAAuB+G,OAAvB,EAAgCC,OAAhC;AACD;;AAED,UAASC,SAAT,CAAoB/G,IAApB,EAA0B;AACxB,UAAOA,KAAKF,IAAL,CAAU+E,UAAV,IAAwB,CAAC7E,IAAD,EAC5BsB,MAD4B,CACrBtB,KAAKuB,OAAL,EADqB,EAE5BC,IAF4B,CAEvB;AAAA,YAAKC,EAAEX,KAAF,CAAQM,KAAR,CAAckG,MAAnB;AAAA,IAFuB,CAA/B;AAGD,E;;;;;;;;;;;;;;AC3HM,KAAM5C,gCAAY,SAAZA,SAAY;AAAA,UAAK6C,KAAKC,SAAL,CAAeC,CAAf,EAAkBC,UAAlB,CAAL;AAAA,EAAlB;;AAEP,KAAMC,kBAAkB,IAAxB;;AAEA,UAASD,QAAT,GAAqB;AACnB,OAAIE,QAAQ,EAAZ;AACA,OAAIC,IAAI,CAAR;AACA,OAAIC,UAAJ;AACA,UAAO,SAASJ,QAAT,CAAmBnB,GAAnB,EAAwBnF,KAAxB,EAA+B;AACpC,SAAImF,QAAQ,EAAZ,EAAgB;AACdqB,eAAQ,EAAR;AACAC,WAAI,CAAJ;AACD;AACD,SAAIrC,MAAMuC,WAAW3G,KAAX,CAAV;AACA,SAAIoE,QAAQI,SAAZ,EAAuB,OAAOJ,GAAP;AACvB,SAAI,CAACpE,KAAD,IAAUuG,kBAAkB,EAAEE,CAAlC,EAAqC,OAAOjC,SAAP;AACrCkC,SAAIF,MAAMI,OAAN,CAAc5G,KAAd,CAAJ;AACA,SAAI0G,IAAI,CAAR,EAAW,OAAOF,MAAMK,IAAN,CAAW7G,KAAX,KAAqBA,KAA5B;AACX,YAAO,eAAe0G,CAAtB;AACD,IAXD;AAYD;;AAED,UAASC,UAAT,CAAqB3G,KAArB,EAA4B;AAC1B,kBAAeA,KAAf,yCAAeA,KAAf;AACE,UAAK,UAAL;AACE,cAAO,GAAGE,MAAH,CACH,WADG,EAEHF,MAAMtB,IAAN,IAAc,WAFX,EAGH,GAHG,EAIDoI,MAAM9G,MAAMH,MAAN,GAAe,CAArB,EAAwBkH,IAAxB,CAA6B,MAA7B,EAAqCC,KAArC,CAA2C,CAA3C,CAJC,EAKH,GALG,CAAP;AAOF,UAAK,SAAL;AACA,UAAK,QAAL;AACA,UAAK,QAAL;AACE,cAAOhH,KAAP;AAZJ;AAcD,E;;;;;;;;;;;;ACrCD;;AACA;;;;AAEA,KAAIiH,UAAU,EAAd;;AAEA,UAAShB,GAAT,CAAcrH,IAAd,EAAoBF,IAApB,EAA0B+G,OAA1B,EAAmCC,OAAnC,EAA4C;AAC1C,OAAI,CAAC,uBAAW9G,IAAX,CAAL,EAAuB;AACrBqI,aAAQlI,OAAR,CAAgB,aAAK;AACnB0F,SAAEyC,QAAF,GACIzC,EAAE0C,MAAF,CAASC,UAAUxI,IAAV,EAAgBF,IAAhB,EAAsB+G,OAAtB,EAA+BC,OAA/B,CAAT,EAAkD9G,IAAlD,CADJ,GAEI6F,EAAE0C,MAAF,CAASvI,IAAT,EAAeF,IAAf,EAAqB+G,OAArB,EAA8BC,OAA9B,CAFJ;AAGD,MAJD;AAKA2B,WAAMzI,IAAN,EAAYF,IAAZ,EAAkB+G,OAAlB,EAA2BC,OAA3B;AACD;AACF;;AAED,UAAS2B,KAAT,CAAgBzI,IAAhB,EAAsBF,IAAtB,EAA4B+G,OAA5B,EAAqCC,OAArC,EAA8C;AAC5C,UAAOxH,MAAP,KAAkB,WAAlB,IACAA,OAAOoJ,uBADP,IAEApJ,OAAOoJ,uBAAP,CACEF,UAAUxI,IAAV,EAAgBF,IAAhB,EAAsB+G,OAAtB,EAA+BC,OAA/B,CADF,EAC2C9G,IAD3C,CAFA;AAID;;AAED,KAAM2I,UAAU;AACd,YAAS,CAAC,SAAD,EAAY,QAAZ,CADK;AAEd,aAAU,CAAC,QAAD,CAFI;AAGd,aAAU,CAAC,QAAD,CAHI;AAId,cAAW,CAAC,YAAD;AAJG,EAAhB;AAMA;;;AAGA,UAASH,SAAT,CAAoBxI,IAApB,EAA0BF,IAA1B,EAAgCM,CAAhC,EAAmCwI,EAAnC,EAAuC;AACrC,OAAInB,IAAI;AACNzH,WAAMA,KAAK6I,KAAL,CAAW,MAAX,EAAmB,MAAnB,CADA;AAENC,aAAQhJ;AAFF,IAAR;AAIA,OAAIiJ,QAAQ,CAAC,MAAD,EAAS,MAAT,CAAZ;AACAJ,WAAQ7I,IAAR,KAAiBiJ,MAAMd,IAAN,iCAAcU,QAAQ7I,IAAR,CAAd,EAAjB;AACA,OAAIA,SAAS,QAAT,IAAqBM,EAAEL,IAAF,OAAa6F,SAAtC,EAAiDmD,MAAMd,IAAN,CAAW,MAAX;AACjD,OAAIpB,UAAWzG,KAAKA,EAAEyI,KAAP,GAAezI,EAAEyI,KAAF,UAAWE,KAAX,CAAf,GAAmC,sBAAU3I,CAAV,CAAlD;AACA,OAAI0G,UAAW8B,MAAMA,GAAGC,KAAT,GAAiBD,GAAGC,KAAH,WAAYE,KAAZ,CAAjB,GAAsC,sBAAUH,EAAV,CAArD;AACA,OAAI/B,YAAYjB,SAAhB,EAA2B6B,EAAErH,CAAF,GAAMyG,OAAN;AAC3B,OAAIC,YAAYlB,SAAhB,EAA2B6B,EAAEmB,EAAF,GAAO9B,OAAP;AAC3B,UAAOW,CAAP;AACD;;AAED,UAAS7H,IAAT,CAAeI,IAAf,EAAqB;AACnBA,QAAKgJ,cAAL,GAAsB,YAAoB;AAAA,SAAnBC,OAAmB,uEAAT,IAAS;;AACxCC,aAAQC,IAAR,CAAa,uHAAb;AACA,YAAOnJ,IAAP;AACD,IAHD;;AAKAA,QAAKuI,MAAL,GAAc,YAAsC;AAAA,SAArCA,MAAqC;AAAA,SAArBD,QAAqB,uEAAV,KAAU;;AAClD,SAAIC,wBAAJ,EAAsB,OAAOF,OAAP,CAAtB,KACKA,QAAQJ,IAAR,CAAa,EAACM,cAAD,EAASD,kBAAT,EAAb;AACL,YAAOtI,IAAP;AACD,IAJD;AAKAA,QAAKuI,MAAL,CAAYa,KAAZ,GAAoB,YAAM;AAAEf,eAAU,EAAV;AAAc,IAA1C;AACAI,SAAMzI,IAAN,EAAY,OAAZ,EAAqBA,IAArB;AACD;;sBAEc;AACbJ,aADa;AAEbyH;AAFa,E;;;;;;;;;;;;;AC9Df;;AAMA;;sBAEe,UAACrH,IAAD,EAAU;AACvB;;;;;;;;;;;;;;AAcAA,QAAKkG,QAAL,GAAgB,YAAa;AAC3B,wBAAO,UAAKjF,MAAZ,EAAoB,eAAO0C,eAA3B;AACA,YAAO3D,KAAKkG,QAAL,CAAc9E,KAAd,CAAoBE,MAApB,EAAP;AACD,IAHD;AAIAtB,QAAKkG,QAAL,CAAc9E,KAAd,GAAsB,EAAtB;;AAEA;;;;;;;;;;;;;;;;;;;;;AAqBApB,QAAKkG,QAAL,CAAcC,GAAd,GAAoB,UAACR,OAAD;AAAA,SAAU0D,SAAV,uEAAsB,IAAtB;AAAA,YAA+BrJ,KAAKkG,QAAL,CAAcoD,IAAd,CAAmB3D,OAAnB,EAA4B0D,SAA5B,MAA2CzD,SAA1E;AAAA,IAApB;;AAEA;;;;;;;;;;;;;;;;;;;;;;AAsBA5F,QAAKkG,QAAL,CAAcoD,IAAd,GAAqB,UAAC3D,OAAD;AAAA,SAAU0D,SAAV,uEAAsB,IAAtB;AAAA,YAA+BrJ,KAAKkG,QAAL,CAAcoD,IAAd,CAAmBC,GAAnB,CAAuB5D,OAAvB,EAAgC0D,SAAhC,EAA2CrD,GAA3C,EAA/B;AAAA,IAArB;;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;AAyBAhG,QAAKkG,QAAL,CAAcoD,IAAd,CAAmBC,GAAnB,GAAyB,UAAC5D,OAAD,EAAU0D,SAAV,EAAwB;AAC/C,SAAIG,SAAS,0BAAc7D,OAAd,CAAb;AACA,SAAIO,WAAWmD,YACXrJ,KAAKkG,QAAL,CAAcqD,GAAd,EADW,GAEXvJ,KAAKkG,QAAL,CAAc9E,KAFlB;AAGA,YAAO8E,SAASsD,MAAT,CAAgBA,MAAhB,CAAP;AACD,IAND;;AAQAxJ,QAAKkG,QAAL,CAAcuD,OAAd,GAAwBzJ,KAAKkG,QAAL,CAAcoD,IAAd,CAAmBC,GAA3C;AACAvJ,QAAK0J,GAAL,GAAW1J,KAAKkG,QAAL,CAAcoD,IAAzB;AACAtJ,QAAK0J,GAAL,CAASH,GAAT,GAAevJ,KAAKkG,QAAL,CAAcoD,IAAd,CAAmBC,GAAlC;AACAvJ,QAAK2J,MAAL,GAAc3J,KAAKkG,QAAL,CAAcuD,OAA5B;;AAEA;;;;;;;AAOAzJ,QAAKkG,QAAL,CAAcqD,GAAd,GAAoB,YAAa;AAC/B,wBAAO,UAAKtI,MAAZ,EAAoB,eAAO0C,eAA3B;AACA,SAAIiG,WAAW,EAAf;AACA,YAAOC,YAAY7J,IAAZ,CAAP;;AAEA,cAAS6J,WAAT,CAAsB7J,IAAtB,EAA4B;AAC1B,WAAI4J,SAAS5J,KAAKsC,IAAL,EAAT,CAAJ,EAA2B,OAAO,EAAP;AAC3BsH,gBAAS5J,KAAKsC,IAAL,EAAT,IAAwB,IAAxB;AACA,WAAIwH,IAAI9J,KAAKkG,QAAL,CAAc9E,KAAtB;AACA,WAAI2I,KAAK/J,KAAKkG,QAAL,CAAc9E,KAAd,CAAoB4I,GAApB,CAAwBH,WAAxB,CAAT;;AAEA,cAAOC,EAAExI,MAAF,CAAS+E,KAAT,CAAeyD,CAAf,EAAkBC,EAAlB,CAAP;AACD;AACF,IAbD;AAcA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6BA/J,QAAKiG,MAAL,GAAc,YAAmB;AAC/B;AACA,SAAI,CAAC,UAAWhF,MAAhB,EAAwB,OAAOjB,KAAKiG,MAAL,CAAY7E,KAAnB;AACxB,SAAI6E,yDAAJ;AACAA,eAAU,mBAAO,CAAC,mBAAOA,MAAP,CAAR,EAAwB,eAAOjC,aAA/B,EAA8CiC,MAA9C,CAAV;AACA,SAAIgE,iBAAiBjK,KAAKiG,MAAL,EAArB;AACA,wBAAOjG,IAAP;AACA;;;;;;;;;AASA;;;;;;;;;AASA;;;;;;;;;AASA,uCAAsBA,IAAtB,EAA4B,QAA5B,EAAsCiG,MAAtC,EAA8CgE,cAA9C;AACAC,YAAOjE,MAAP;AACA;;;;;;;;;AASA;;;;;;;;;AASA;;;;;;;;;AASA,uCAAsBjG,IAAtB,EAA4B,UAA5B,EAAwCiG,MAAxC,EAAgDgE,cAAhD;AACA,YAAOjK,IAAP;AACD,IAjED;;AAmEA;;;;AAIAA,QAAKuB,OAAL,GAAe,YAAa;AAC1B,wBAAO,UAAKN,MAAZ,EAAoB,eAAOgD,cAA3B;AACA,SAAIkG,YAAY,EAAhB;AACA,SAAI5I,UAAU,EAAd;AACA,SAAI6I,IAAIpK,KAAKiG,MAAL,EAAR;AACA,YAAOmE,KAAK,CAACD,UAAUC,EAAE9H,IAAF,EAAV,CAAb,EAAkC;AAChCf,eAAQ0G,IAAR,CAAamC,CAAb;AACAD,iBAAUC,EAAE9H,IAAF,EAAV,IAAsB,IAAtB;AACA8H,WAAIA,EAAEnE,MAAF,EAAJ;AACD;AACD,YAAO1E,OAAP;AACD,IAXD;;AAaA;;;;;;;;;;;;;;;;;;;;;;;AAuBAvB,QAAKuB,OAAL,CAAa+H,IAAb,GAAoB,UAAC3D,OAAD,EAAa;AAC/B,SAAIA,YAAY,IAAhB,EAAsB,OAAO,IAAP;AACtB,SAAI6D,SAAS7D,OAAb;AACA,SAAI,OAAQA,OAAR,KAAqB,QAAzB,EAAmC6D,SAAS;AAAA,cAAK3D,EAAE/F,IAAF,OAAa6F,OAAlB;AAAA,MAAT,CAAnC,KACK,IAAI,mBAAOA,OAAP,CAAJ,EAAqB6D,SAAS;AAAA,cAAK3D,MAAMF,OAAX;AAAA,MAAT;;AAE1B,YAAO3F,KAAKuB,OAAL,GACJiI,MADI,CACGA,MADH,EAEJxD,GAFI,EAAP;AAGD,IATD;AAUAhG,QAAKuB,OAAL,CAAamI,GAAb,GAAmB1J,KAAKuB,OAAL,CAAa+H,IAAhC;;AAEA;;;;;;;;;;;;;;;;;;;;AAoBAtJ,QAAKuB,OAAL,CAAa4E,GAAb,GAAmB,UAACR,OAAD;AAAA,YACjB,CAAC,CAAC3F,KAAKuB,OAAL,CAAa+H,IAAb,CAAkB3D,OAAlB,CADe;AAAA,IAAnB;;AAIA;;;;;;AAMA3F,QAAKuB,OAAL,CAAa5B,IAAb,GAAoB,YAAa;AAC/B,wBAAO,UAAKsB,MAAZ,EAAoB,eAAOsD,WAA3B;AACA,YAAOvE,KACJuB,OADI,GAEJyE,GAFI,EAAP;AAGD,IALD;;AAOA;;;AAGAhG,QAAKkG,QAAL,CAAclB,MAAd,GAAuB,UAACqF,KAAD,EAAW;AAChCrK,UAAKkG,QAAL,CAAc9E,KAAd,GACEpB,KAAKkG,QAAL,CAAc9E,KAAd,CACGoI,MADH,CACU;AAAA,cAAK3D,MAAMwE,KAAX;AAAA,MADV,CADF;AAGA,yCAAwBrK,IAAxB;AACD,IALD;;AAOAA,QAAKqC,MAAL,GAAcrC,IAAd;;AAEA,YAASkK,MAAT,CAAiBjE,MAAjB,EAAyB;AACvBjG,UAAKiG,MAAL,CAAY7E,KAAZ,GAAoB6E,MAApB;AACA,SAAIA,MAAJ,EAAY;AACVA,cAAOC,QAAP,CAAgB9E,KAAhB,CAAsB6G,IAAtB,CAA2BjI,IAA3B;AACA,2CAAwBiG,MAAxB;AACD;AACF;AACF,E;;;;;;;;;;;;;;ACnVD;;;;AACA;;;;sBAEe,UAACjG,IAAD,EAAOH,QAAP,EAAoB;AACjC;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoCA;AACAG,QAAKO,MAAL,GAAc,UAACT,IAAD,EAAmB;AAAA,uCAATC,IAAS;AAATA,WAAS;AAAA;;AAC/B,SAAIuK,WAAW,0BAAQtK,KAAKO,MAAL,CAAYV,QAApB,EAA8BC,IAA9B,EAAoCC,IAApC,CAAf;AACAuK,cAASrE,MAAT,CAAgB7E,KAAhB,GAAwBpB,IAAxB;AACAA,UAAKkG,QAAL,CAAc9E,KAAd,CAAoB6G,IAApB,CAAyBqC,QAAzB;AACAC,kBAAaD,QAAb;;AAEA;;;;;;;;AAQA;;;;;;;;AAQA;;;;;;;;AAQA,uCAAsBtK,IAAtB,EAA4B,QAA5B,EAAsCsK,QAAtC;;AAEA,YAAOA,QAAP;AACD,IAjCD;;AAmCA;;;;;;;;;;AAUAtK,QAAKO,MAAL,CAAYiK,IAAZ,GAAmB,UAAC1K,IAAD,EAAmB;AAAA;;AAAA,wCAATC,IAAS;AAATA,WAAS;AAAA;;AACpC,SAAIuK,WAAWtK,KAAK0J,GAAL,CAAS5J,IAAT,CAAf;AACA,SAAIwK,QAAJ,EAAc,uBAASvK,IAAT,kBAAiBA,IAAjB,EAAd,KACKuK,WAAWtK,KAAKO,MAAL,cAAYT,IAAZ,SAAqBC,IAArB,EAAX;AACL,YAAOuK,QAAP;AACD,IALD;;AAOA;;;;AAIAtK,QAAKO,MAAL,CAAYV,QAAZ,GAAuB;AACrBI,cAASJ,SAASI,OADG;AAErBC,iBAAYL,SAASK,UAAT,CAAoBoB,MAApB,EAFS;AAGrBQ,gBAAWjC,SAASiC;AAHC,IAAvB;AAKD,E;;AAED,UAASyI,YAAT,CAAuBvK,IAAvB,EAA6B;AAC3B,OAAIoK,IAAIpK,KAAKiG,MAAL,EAAR;AACA,OAAImE,CAAJ,EAAO;AACL,SAAIvK,WAAWuK,EAAEtJ,KAAF,CAAQM,KAAR,CAAcvB,QAAd,IAA0B,EAAzC;AACA,SAAI4K,eAAe5K,SAASG,KAAKF,IAAL,CAAUsB,KAAnB,KAA6B,EAAhD;AACA;AACApB,UAAKc,KAAL,CAAWM,KAAX,gBAAuBqJ,YAAvB;AACA;AACD;AACF,E;;;;;;;;;;;;AClHD;;AAKA;;AAMA;;;;;;;;sBAEe,UAACzK,IAAD,EAAU;AACvB;;;;;AAKAA,QAAK0B,MAAL,GAAc,YAAa;AACzB,wBAAO,UAAKT,MAAZ,EACO,eAAOiD,aADd;AAEA,SAAIlE,KAAKgB,MAAL,CAAYI,KAAhB,EAAuB,OAAO,eAAOO,SAAd;AACvB,SAAI3B,KAAK0K,OAAL,CAAatJ,KAAjB,EAAwB,OAAO,eAAOQ,QAAd;AACxB,YAAO5B,KAAK0B,MAAL,CAAYN,KAAnB;AACD,IAND;;AAQA;;;;AAIApB,QAAK0B,MAAL,CAAYO,GAAZ,GAAkB,UAACP,MAAD,EAAY;AAC5B,SAAIA,WAAW1B,KAAK0B,MAAL,CAAYN,KAA3B,EAAkC;AAClC,MAACpB,KAAKF,IAAL,CAAU+E,UAAX,IAAyB,kCAAsB7E,IAAtB,EAA4B,QAA5B,EAAsC0B,MAAtC,EAA8C1B,KAAK0B,MAAL,CAAYN,KAA1D,CAAzB;AACApB,UAAK0B,MAAL,CAAYN,KAAZ,GAAoBM,MAApB;AACD,IAJD;AAKA1B,QAAK0B,MAAL,CAAYN,KAAZ,GAAoB,eAAOiC,IAA3B;AACA,qCAAcrD,KAAK0B,MAAnB;;AAEA;;;;;;AAMA1B,QAAK8B,SAAL,GAAiB,YAAuB;AAAA,SAAtBA,SAAsB;;AACtC,SAAIA,2BAAJ,EAAyB,OAAO9B,KAAK8B,SAAL,CAAeV,KAAtB;AACzB,SAAIuJ,eAAe3K,KAAK8B,SAAL,CAAeV,KAAlC;AACApB,UAAK8B,SAAL,CAAeV,KAAf,GAAuBU,SAAvB;AACA,uCAAsB9B,IAAtB,EAA4B,WAA5B,EAAyC8B,SAAzC,EAAoD6I,YAApD;AACA,YAAO3K,IAAP;AACD,IAND;AAOAA,QAAK8B,SAAL,CAAeV,KAAf,GAAuBpB,KAAKO,MAAL,CAAYV,QAAZ,CAAqBiC,SAA5C;AACA,wCAAiB9B,KAAK8B,SAAtB;;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyCA9B,QAAKS,IAAL,GAAY,YAA2B;AAAA,uCAATmK,IAAS;AAATA,WAAS;AAAA;;AAAA,SAA1B9K,IAA0B;;AACrC,YAAOW,KAAKX,IAAL,EAAW8K,IAAX,CAAP;AACD,IAFD;AAGA5K,QAAKS,IAAL,CAAUoK,UAAV,GAAuB,EAAvB;AACA7K,QAAKS,IAAL,CAAUqK,aAAV,GAA0B,EAA1B;AACAC,iBAAc/K,IAAd;AACA;;;;;;;;AAQA;;;;;;;;AAQA;;;;;;;;AAQA;;;;;;;;AAQA;;;;;;;;AAQA;;;;;;;;AAQA,YAASS,IAAT,GAA8C;AAAA,SAA/BX,IAA+B;AAAA,SAAjB8K,IAAiB;AAAA,SAAX9I,SAAW;;AAC5C,SAAIhC,sBAAJ,EAAoB;AAClB;AACA,0BAAOE,IAAP;AACA,WAAIoK,IAAIpK,KAAKiG,MAAL,MAAiBjG,IAAzB;AACA8B,oBAAa9B,KAAK8B,SAAL,CAAeA,SAAf,CAAb;AACA,yCAAsBsI,CAAtB,EAAyB,MAAzB,EAAiCpK,IAAjC;AACAoK,SAAE3J,IAAF,CAAOuK,KAAP,CAAahL,IAAb;AACA,yCAAsBoK,CAAtB,EAAyB,SAAzB,EAAoCpK,IAApC;AACA,cAAOA,IAAP;AACD;AACD,SAAI,mBAAOF,IAAP,CAAJ,EAAkB;AAChB;AACAA,YAAKmG,MAAL,CAAYjG,IAAZ;AACA;AACA,0BAAOF,IAAP;AACAgC,oBAAahC,KAAKgC,SAAL,CAAeA,SAAf,CAAb;AACA8I,YAAK3J,MAAL,IAAenB,KAAKC,IAAL,gCAAa6K,IAAb,EAAf;AACA,yCAAsB5K,IAAtB,EAA4B,MAA5B,EAAoCF,IAApC;AACAE,YAAKS,IAAL,CAAUuK,KAAV,CAAgBlL,IAAhB;AACA,yCAAsBE,IAAtB,EAA4B,SAA5B,EAAuCF,IAAvC;AACA,cAAOE,IAAP;AACD;;AAED;AACA,wBAAO,OAAQF,IAAR,KAAkB,QAAzB,EACI,eAAOgE,gBADX;;AAGA,SAAImH,QAAQjL,KAAKO,MAAL,cAAYT,IAAZ,4BAAqB8K,IAArB,GAAZ;AACA,wBAAOK,KAAP;AACA,SAAInJ,SAAJ,EAAemJ,MAAMnJ,SAAN,CAAgBV,KAAhB,GAAwBU,SAAxB;AACf,uCAAsB9B,IAAtB,EAA4B,MAA5B,EAAoCiL,KAApC;AACAjL,UAAKS,IAAL,CAAUuK,KAAV,CAAgBC,KAAhB;AACA,uCAAsBjL,IAAtB,EAA4B,SAA5B,EAAuCiL,KAAvC;AACA,YAAOA,KAAP;AACD;;AAED;;;AAGAjL,QAAKS,IAAL,CAAUuK,KAAV,GAAkB,UAACC,KAAD,EAAW;AAC3BA,WAAMpJ,eAAN,CAAsBT,KAAtB,GAA8B,KAA9B;AACA6J,WAAMvJ,MAAN,CAAaO,GAAb,CAAiB,eAAOqB,OAAxB;AACA,SAAI4H,YAAY,yBAAaD,MAAMnL,IAAN,EAAb,CAAhB;AACA,SAAI6F,UAAU,SAAVA,OAAU;AAAA,cAAKE,EAAEa,EAAF,CAAKC,aAAL,CAAmBuE,SAAnB,CAAL;AAAA,MAAd;AACAD,WAAMxK,IAAN,CAAW0B,OAAX,GAAqBnC,KAAKS,IAAL,CAAUuK,KAAV,CAAgBC,MAAMnJ,SAAN,EAAhB,EAAmCmJ,KAAnC,EAA0CtF,OAA1C,EAClBrE,MADkB,CACX2J,MAAMxK,IAAN,CAAW0B,OAAX,IAAsB,EADX,CAArB;;AAGA,YAAO8I,MAAMxK,IAAN,CAAW0B,OAAX,CAAmBlB,MAA1B,EAAkC;AAChC,WAAIkK,cAAcF,MAAMxK,IAAN,CAAW0B,OAAX,CAAmBiJ,KAAnB,EAAlB;AACA,WAAIH,MAAM5J,WAAN,EAAJ,EAAyB;AACzB,WAAI4J,MAAMzI,kBAAN,EAAJ,EAAgC;AAChC,WAAI2I,YAAYnL,IAAZ,CAAiBqB,WAAjB,EAAJ,EAAoC;AACpCgK,cAAOJ,KAAP,EAAcE,WAAd;AACD;AACD,SAAI,CAACF,MAAM5J,WAAN,EAAD,IAAwB,CAAC4J,MAAMzI,kBAAN,EAA7B,EAAyD;AACvDyI,aAAMvJ,MAAN,CAAaO,GAAb,CAAiB,eAAOsB,SAAxB;AACD;AACF,IAlBD;;AAoBAd,UAAOC,IAAP,sBAAoBvC,OAApB,CAA4B,iBAAS;AACnCH,UAAKS,IAAL,CAAUuK,KAAV,CAAgBA,KAAhB,IACAhL,KAAKS,IAAL,CAAUuK,KAAV,CAAgBA,MAAMjJ,WAAN,EAAhB,IACE,oBAAOiJ,KAAP,CAFF;AAGD,IAJD;;AAMA,YAASK,MAAT,CAAiBrL,IAAjB,EAAuBsL,WAAvB,EAAoC;AAClC;AACA,SAAItL,KAAKS,IAAL,CAAUqK,aAAV,CAAwBQ,YAAYtL,IAAZ,CAAiBsC,IAAjB,EAAxB,CAAJ,EAAsD;AACtD,SAAIiJ,cAAcvL,IAAd,EAAoBsL,WAApB,CAAJ,EAAsC;AACtCtL,UAAKS,IAAL,CAAUqK,aAAV,CAAwBQ,YAAYtL,IAAZ,CAAiBsC,IAAjB,EAAxB,IAAmDtC,KAAK8B,SAAL,EAAnD;AACA,SAAI0J,SAASF,YAAYtL,IAAZ,CAAiB0G,EAAjB,CAAoB+E,eAApB,CAAoCzL,IAApC,CAAb;AACA,SAAIwL,MAAJ,EAAY;AACVA,cAAOR,KAAP,GAAeM,YAAYN,KAA3B;AACAQ,cAAO1J,SAAP,GAAmB9B,KAAK8B,SAAL,EAAnB;AACA9B,YAAKS,IAAL,CAAUoK,UAAV,CAAqB5C,IAArB,CAA0BuD,MAA1B;AACD;AACF;;AAED,YAASD,aAAT,CAAwBvL,IAAxB,EAA8BmL,WAA9B,EAA2C;AACzC,SAAI/I,YAAYK,OAAOC,IAAP,CAAY1C,KAAK6B,eAAL,CAAqBO,SAAjC,CAAhB;AACA,SAAI,CAACA,UAAUnB,MAAf,EAAuB,OAAO,KAAP;;AAEvB,SAAIyK,WAAWP,YAAYH,KAAZ,CAAkBW,MAAlB,CAAyB,UAAC7D,CAAD,EAAIkD,KAAJ,EAAc;AACpDlD,SAAEkD,MAAMhL,IAAN,CAAWsC,IAAX,EAAF,KAAwB,0BAAkB0I,MAAMlJ,SAAxB,CAAxB;AACA,cAAOgG,CAAP;AACD,MAHc,EAGZ,EAHY,CAAf;;AAKA,YAAO1F,UAAUZ,IAAV,CAAe,gBAAQ;AAC5B,cAAOkK,SAASpJ,IAAT,MAAmBtC,KAAK6B,eAAL,CAAqBO,SAArB,CAA+BE,IAA/B,CAA1B;AACD,MAFM,CAAP;AAGD;;AAEH;;;AAGE,YAASyI,aAAT,CAAwB/K,IAAxB,EAA8B;AAC5ByC,YAAOC,IAAP,oBACCvC,OADD,CACS,qBAAa;AACpBH,YAAKS,IAAL,CAAUqB,SAAV,IACA9B,KAAKS,IAAL,CAAUqB,UAAUa,WAAV,EAAV,IACE,UAAC7C,IAAD;AAAA,4CAAU8K,IAAV;AAAUA,eAAV;AAAA;;AAAA,gBAAmBnK,KAAKX,IAAL,EAAW8K,IAAX,EAAiB9I,SAAjB,CAAnB;AAAA,QAFF;AAGD,MALD;AAMD;AACF,E;;;;;;;;;;;;AC9PD;;;;AACA;;;;AACA;;;;AACA;;;;;;sBAEe;AACboF,kCADa;AAEbE,sCAFa;AAGbwE,6BAHa,EAGE;AACf5E,gCAJa;AAKb,kCALa,CAKO;AALP,E;;;;;;;;;;;;ACLf;;AACA;;AAEA;;;sBAGe,UAAChH,IAAD,EAAO2F,OAAP,EAAmB;AAChC,OAAIkG,QAAQ,0BAAclG,OAAd,CAAZ;AACA,UAAO,CAAC3F,IAAD,EACJsB,MADI,CACGtB,KAAKuB,OAAL,EADH,EAEJyI,GAFI,CAEA,UAAChK,IAAD,EAAO8H,CAAP,EAAUgE,GAAV;AAAA,YAAmB;AACtB9L,iBADsB;AAEtBgL,cAAOc,IAAI1D,KAAJ,CAAU,CAAV,EAAaN,IAAI,CAAjB,EACJkC,GADI,CACA;AAAA,gBAAM;AACThK,iBAAM6F,CADG;AAET/D,sBAAW,kBAAUmB;AAFZ,UAAN;AAAA,QADA;AAFe,MAAnB;AAAA,IAFA,EAUJuG,MAVI,CAUG;AAAA,YAAKqC,MAAMhG,EAAE7F,IAAR,CAAL;AAAA,IAVH,CAAP;AAWD,E;;;;;;;;;;;;ACnBD;;AACA;;AACA;;;sBAGe,UAACA,IAAD,EAAO2F,OAAP,EAAmB;AAChC,OAAMkG,QAAQ,0BAAclG,OAAd,CAAd;AACA,UAAO,CAAC3F,IAAD,EACJsB,MADI,CACGtB,KAAKiG,MAAL,EADH,EAEJ+D,GAFI,CAEA,UAAChK,IAAD,EAAO8H,CAAP,EAAUgE,GAAV;AAAA,YAAmB;AACtB9L,iBADsB;AAEtBgL,cAAOc,IACJ1D,KADI,CACE,CADF,EACKN,IAAI,CADT,EAEJkC,GAFI,CAEA,UAACnE,CAAD,EAAIiC,CAAJ;AAAA,gBAAW;AACd9H,iBAAM6F,CADQ;AAEd/D,sBAAWgG,IAAI,kBAAU7E,QAAd,GAAyB,kBAAUH;AAFhC,UAAX;AAAA,QAFA;AAFe,MAAnB;AAAA,IAFA,EAWJ0G,MAXI,CAWG;AAAA,YAAKqC,MAAMhG,EAAE7F,IAAR,CAAL;AAAA,IAXH,CAAP;AAYD,E;;;;;;;;;;;;ACnBD;;AACA;;sBAEe,UAACA,IAAD,EAAO2F,OAAP,EAAmB;AAChC,OAAIkG,QAAQ,0BAAclG,OAAd,CAAZ;AACA,OAAIoG,kBAAkB,EAAtB;AACA,OAAI9F,SAASjG,KAAKiG,MAAL,EAAb;AACA,OAAI+F,MAAM,SAANA,GAAM,IAAK;AACb,SAAInG,MAAM7F,IAAV,EAAgB,OAAO,kBAAU8C,OAAjB;AAChB,SAAI+C,MAAMI,MAAV,EAAkB,OAAO,kBAAUhD,QAAjB;AAClB,YAAO,kBAAUC,UAAjB;AACD,IAJD;AAKA,OAAI8H,QAAQnB,YAAY7J,IAAZ,EAAkB,EAAlB,EACTsB,MADS,CACFuI,YAAY7J,KAAKiG,MAAL,EAAZ,EACJ,CAAC,EAACjG,MAAMA,IAAP,EAAa8B,WAAWkK,IAAIhM,IAAJ,CAAxB,EAAD,CADI,CADE,CAAZ;;AAIA,UAAOgL,KAAP;AACA,YAASnB,WAAT,CAAsB7J,IAAtB,EAA4BgL,KAA5B,EAAmC;AACjC,SAAIe,gBAAgB/L,KAAKsC,IAAL,EAAhB,CAAJ,EAAkC,OAAO,EAAP;AAClCyJ,qBAAgB/L,KAAKsC,IAAL,EAAhB,IAA+B,IAA/B;AACA,SAAI,CAACuJ,MAAM7L,IAAN,CAAL,EAAkB,OAAO,EAAP;AAClBgL,aAAQA,MAAM1J,MAAN,CAAa,CAAC,EAACtB,MAAMA,IAAP,EAAa8B,WAAWkK,IAAIhM,IAAJ,CAAxB,EAAD,CAAb,CAAR;AACA,SAAIiM,QAAQ,CAAC,EAAEjM,UAAF,EAAQgL,YAAR,EAAD,CAAZ;AACAhL,UAAKkG,QAAL,CAAc9E,KAAd,CACGjB,OADH,CACW;AAAA,cAAM8L,QAAQA,MAAM3K,MAAN,CAAauI,YAAYhE,CAAZ,EAAemF,KAAf,CAAb,CAAd;AAAA,MADX;AAEA,YAAOiB,KAAP;AACD;AACF,E;;;;;;;;;;;;AC3BD;;AACA;;sBAEe,UAACjM,IAAD,EAAO2F,OAAP,EAAmB;AAChC,OAAIkG,QAAQ,0BAAclG,OAAd,CAAZ;AACA,OAAIoG,kBAAkB,EAAtB;AACA,OAAIf,QAAQ,EAAZ;AACA,OAAIzJ,UAAU,CAACvB,IAAD,EAAOsB,MAAP,CAActB,KAAKuB,OAAL,EAAd,EACXyI,GADW,CACP,UAAChK,IAAD,EAAO8H,CAAP,EAAUgE,GAAV;AAAA,YAAmB;AACtB9L,iBADsB;AAEtBgL,cAAOc,IAAI1D,KAAJ,CAAU,CAAV,EAAaN,IAAI,CAAjB,EACJkC,GADI,CACA;AAAA,gBAAM;AACThK,iBAAM6F,CADG;AAET/D,sBAAW,kBAAUmB;AAFZ,UAAN;AAAA,QADA;AAFe,MAAnB;AAAA,IADO,CAAd;;AAUA1B,WAAQpB,OAAR,CAAgB,aAAK;AACjB;AACF4L,qBAAgBlG,EAAE7F,IAAF,CAAOsC,IAAP,EAAhB,IAAiC,IAAjC;AACAuJ,WAAMhG,EAAE7F,IAAR,KAAiBgL,MAAM/C,IAAN,CAAWpC,CAAX,CAAjB;;AAEA,SAAI,uBAAWA,EAAE7F,IAAb,CAAJ,EAAwB;AACtBgL,eAAQA,MAAM1J,MAAN,CAAauI,YAAYhE,EAAE7F,IAAd,EAAoB6F,EAAEmF,KAAtB,CAAb,CAAR;AACD;AACF,IARD;AASA,UAAOA,KAAP;;AAEA,YAASnB,WAAT,CAAsB7J,IAAtB,EAA4BgL,KAA5B,EAAmC;AACjC,SAAIkB,UAAWH,gBAAgB/L,KAAKsC,IAAL,EAAhB,CAAf;AACAyJ,qBAAgB/L,KAAKsC,IAAL,EAAhB,IAA+B,IAA/B;AACA,SAAI,CAACuJ,MAAM7L,IAAN,CAAL,EAAkB,OAAO,EAAP;AAClB,SAAIiM,QAAQC,UAAU,EAAV,GAAe,CAAC,EAAElM,UAAF,EAAQgL,YAAR,EAAD,CAA3B;AACAhL,UAAKkG,QAAL,CAAc9E,KAAd,CACGjB,OADH,CACW,aAAK;AACZ8L,eAAQA,MACL3K,MADK,CACEuI,YAAYhE,CAAZ,EAAemF,MACpB1J,MADoB,CACb,CAAC,EAACtB,MAAM6F,CAAP,EAAU/D,WAAW,kBAAUoB,UAA/B,EAAD,CADa,CAAf,CADF,CAAR;AAID,MANH;AAOA,YAAO+I,KAAP;AACD;AACF,E;;;;;;;;;;;;AC1CD;;AAEA;;sBAEe,UAACjM,IAAD,EAAOH,QAAP,EAAiBC,IAAjB,EAA0B;AACvC;;;;;;AAMAE,QAAKsC,IAAL,GAAY,YAAa;AACvB,wBAAO,UAAKrB,MAAZ,EACO,eAAOyC,WADd;AAEA,YAAO1D,KAAKsC,IAAL,CAAUlB,KAAjB;AACD,IAJD;AAKApB,QAAKsC,IAAL,CAAUlB,KAAV,GAAkB+K,YAAlB;;AAEA;;;;;;;;;;;;;;;;;;AAkBAnM,QAAKF,IAAL,GAAY,YAAkB;AAAA,SAAjBA,IAAiB;;AAC5B,SAAIA,sBAAJ,EAAoB,OAAOE,KAAKF,IAAL,CAAUsB,KAAjB;AACpB,wBAAO,OAAQtB,IAAR,KAAkB,QAAzB,EACO,eAAOiE,WADd,EAC2BjE,IAD3B;AAEA,SAAIsM,eAAepM,KAAKF,IAAL,CAAUsB,KAA7B;AACApB,UAAKF,IAAL,CAAUsB,KAAV,GAAkBtB,IAAlB;AACAE,UAAKe,SAAL,CAAemK,SAAf,CAAyBmB,KAAzB,GAAiC,IAAjC;AACA;;;;;;;;;AASA;;;;;;;;;AASA;;;;;;;;;AASA,uCAAsBrM,IAAtB,EAA4B,MAA5B,EAAoCF,IAApC,EAA0CsM,YAA1C;AACA,YAAOpM,IAAP;AACD,IApCD;AAqCAA,QAAKF,IAAL,CAAUsB,KAAV,GAAkBtB,QAAQ,EAA1B;AACAE,QAAKF,IAAL,CAAU8E,MAAV,GAAmB,IAAnB;AACA5E,QAAKF,IAAL,CAAU+E,UAAV,GAAuB,KAAvB;;AAEA7E,QAAKsM,IAAL,GAAY,YAAkB;AAAA,uCAAdC,SAAc;AAAdA,gBAAc;AAAA;;AAC5BA,eACG/C,MADH,CACU;AAAA,cAAK,OAAQ3D,CAAR,KAAe,UAApB;AAAA,MADV,EAEG1F,OAFH,CAEW;AAAA,cAAK0F,EAAEyG,IAAF,CAAOtM,IAAP,EAAaA,IAAb,CAAL;AAAA,MAFX;AAGA,YAAOA,IAAP;AACD,IALD;AAMD,E;;AAED,UAASmM,UAAT,GAAuB;AACrB,UAAO,uCACJzG,OADI,CACI,OADJ,EACa,aAAK;AACrB,SAAImC,IAAI2E,KAAKC,MAAL,KAAgB,EAAhB,GAAqB,CAA7B;AACA,SAAIC,IAAI5C,MAAM,GAAN,GAAYjC,CAAZ,GAAiBA,IAAI,GAAJ,GAAU,GAAnC;AACA,YAAO6E,EAAEC,QAAF,CAAW,EAAX,CAAP;AACD,IALI,CAAP;AAMD,E;;;;;;;;;;;;;;AC5FD;;AACA;;sBAEe,UAAC3M,IAAD,EAAU;AACvB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmDAA,QAAK0G,EAAL,GAAU,YAA2B;AAAA,uCAATkE,IAAS;AAATA,WAAS;AAAA;;AAAA,SAA1B9K,IAA0B;;AACnC,SAAIA,sBAAJ,EAAoB,OAAOE,KAAK0G,EAAL,CAAQE,WAAf;AACpB,wBAAO,OAAQ9G,IAAR,KAAkB,QAAzB,EACI,eAAO8D,eADX;;AAGA,SAAI,CAACgH,KAAK3J,MAAV,EAAkB;AAChB,cAAOjB,KAAK0G,EAAL,CAAQE,WAAR,CAAoB9G,IAApB,CAAP;AACD;;AAED,SAAI8K,KAAK3J,MAAL,KAAgB,CAAhB,IAAqB2J,KAAK,CAAL,MAAY,IAArC,EAA2C;AACzC,cAAO5K,KAAK0G,EAAL,CAAQE,WAAR,CAAoB9G,IAApB,CAAP;AACA,2CAAwBE,IAAxB;AACA;;;;;;;;;AASA;;;;;;;;;AASA;;;;;;;;;AASA,yCAAsBA,IAAtB,EAA4B,iBAA5B,EAA+C,EAACF,UAAD,EAA/C;AACA,cAAOE,IAAP;AACD;AACD,SAAI4M,eAAe5M,KAAK0G,EAAL,CAAQE,WAAR,CAAoB9G,IAApB,CAAnB;AACAE,UAAK0G,EAAL,CAAQE,WAAR,CAAoB9G,IAApB,IAA4B8K,KACzBpB,MADyB,CAClB;AAAA,cAAK,CAAC,mBAAO,OAAQqD,CAAR,KAAe,UAAtB,EACV,eAAOhJ,mBADG,EACkB,QAAQgJ,CAAR,yCAAQA,CAAR,KAAa,IAAb,GAAoBA,CADtC,CAAN;AAAA,MADkB,CAA5B;AAIA,yCAAwB7M,IAAxB;AACA;;;;;;;;;AASA;;;;;;;;;AASA;;;;;;;;;AASA;;;;;;;;;AASA;;;;;;;;;AASA;;;;;;;;;AASA,uCAAsBA,IAAtB,EAA4B4M,eACxB,iBADwB,GAExB,eAFJ,EAGI,EAAC9M,UAAD,EAAOgN,UAAUlC,IAAjB,EAHJ;AAIA,YAAO5K,IAAP;AACD,IA3GD;AA4GAA,QAAK0G,EAAL,CAAQE,WAAR,GAAsB,EAAtB;AACA5G,QAAK0G,EAAL,CAAQC,aAAR,GAAwB,EAAxB;;AAEA3G,QAAK0G,EAAL,CAAQ+E,eAAR,GAA0B,UAACR,KAAD,EAAW;AACnC,SAAIvI,OAAOD,OAAOC,IAAP,CAAY1C,KAAK0G,EAAL,CAAQE,WAApB,CAAX;AACA,SAAImG,YAAY,EAAhB;AACA9B,WAAM5I,MAAN,GAAerC,IAAf;AACA0C,UAAKvC,OAAL,CAAa,wBAAgB;AAC3B,WAAI6M,gBAAgB/B,MAAMlK,SAAN,CAAgB8K,KAAhB,CAAsB7L,IAAtB,EAA4BiN,YAA5B,CAApB;AACA,WAAID,aAAJ,EAAmB;AACjB,aAAIF,WAAW9M,KAAK0G,EAAL,CAAQE,WAAR,CAAoBqG,YAApB,CAAf;AACAF,mBAAU9E,IAAV,CAAe;AACbnI,iBAAMmN,YADO;AAEbH,qBAAUI,kBAAkBjC,KAAlB,EAAyB6B,QAAzB,EAAmC9M,IAAnC;AAFG,UAAf;AAID;AACF,MATD;AAUA,YAAOiL,MAAM5I,MAAb;AACA,YAAO0K,UAAU9L,MAAV,GACH,EAAEjB,UAAF,EAAQ+M,oBAAR,EADG,GAEH,IAFJ;AAGD,IAlBD;AAmBD,E;;AAED,UAASG,iBAAT,CAA4BjC,KAA5B,EAAmC6B,QAAnC,EAA6C9M,IAA7C,EAAmD;AACjD,UAAO8M,SACJ9C,GADI,CACA,oBAAY;AACf,SAAI6C,IAAI;AACNM;AADM,MAAR;AAGA,SAAIlC,MAAMvJ,MAAN,OAAmB,eAAO4B,OAA9B,EAAuC;AACrCuJ,SAAEnL,MAAF,GAAWuJ,MAAMvJ,MAAN,EAAX;AACA,cAAOmL,CAAP;AACD;AACD,SAAI5B,MAAMpJ,eAAN,CAAsBO,SAAtB,CAAgCpC,KAAKsC,IAAL,CAAUlB,KAA1C,IACF,0BAAkB0B,OADpB,EAC6B;AAC3B+J,SAAEnL,MAAF,GAAW,SAAX;AACA,cAAOmL,CAAP;AACD;AACDA,OAAEnL,MAAF,GAAW,WAAX;AACAyL,cAAS9G,KAAT,CAAe4E,KAAf,EAAsBA,MAAMlL,IAAN,CAAWqB,KAAjC;AACA,YAAOyL,CAAP;AACD,IAjBI,CAAP;AAkBD,E;;;;;;;;;;;;AC9MD;;sBAEe,UAAC7M,IAAD,EAAU;AACvB;;;;;;;;;;;;;;;;;;;;;;;;AAwBAA,QAAK2M,QAAL,GAAgB,YAAa;AAC3B,YAAOpF,KAAKC,SAAL,CAAexH,KAAK6I,KAAL,uBAAf,CAAP;AACD,IAFD;AAGA;;;;;;;;;;;;;;;;;;;;;;AAsBA7I,QAAK6I,KAAL,GAAa,YAAa;AAAA,uCAAT+B,IAAS;AAATA,WAAS;AAAA;;AACxB,SAAM7B,QAAQ6B,KAAKe,MAAL,CAAY,UAACyB,CAAD,EAAIC,CAAJ,EAAU;AAAED,SAAEC,CAAF,IAAO,CAAP,CAAU,OAAOD,CAAP;AAAU,MAA5C,EAA8C,EAA9C,CAAd;AACA,SAAME,UAAU,SAAVA,OAAU;AAAA,cAAQ,CAAC1C,KAAK3J,MAAN,IAAgB8H,MAAMwE,IAAN,CAAxB;AAAA,MAAhB;AACA,SAAMC,MAAM,SAANA,GAAM,CAAC1N,IAAD,EAAO2N,MAAP,EAAkB;AAAE,WAAIH,QAAQxN,IAAR,CAAJ,EAAmB4N,IAAI5N,IAAJ,IAAY2N,QAAZ;AAAsB,MAAzE;AACA,SAAIC,MAAM,EAAV;;AAEAF,SAAI,MAAJ,EAAYxN,KAAKF,IAAjB;AACA0N,SAAI,MAAJ,EAAYxN,KAAKsC,IAAjB;AACAkL,SAAI,SAAJ,EAAe;AAAA,cAAMxN,KAAK2N,OAAX;AAAA,MAAf;AACAH,SAAI,QAAJ,EAAcxN,KAAK0B,MAAnB;AACA8L,SAAI,MAAJ,EAAY;AAAA,cAAM,sBAAUxN,KAAKD,IAAL,EAAV,CAAN;AAAA,MAAZ;AACAyN,SAAI,QAAJ,EAAc;AAAA,cAAO;AACnB1N,eAAME,KAAKiG,MAAL,CAAY7E,KAAZ,IAAqBpB,KAAKiG,MAAL,CAAY7E,KAAZ,CAAkBtB,IAAlB,CAAuBsB,KAD/B;AAEnBkB,eAAMtC,KAAKiG,MAAL,CAAY7E,KAAZ,IAAqBpB,KAAKiG,MAAL,CAAY7E,KAAZ,CAAkBkB,IAAlB,CAAuBlB;AAF/B,QAAP;AAAA,MAAd;AAIAoM,SAAI,WAAJ,EAAiB,YAAM;AACrB,WAAMX,IAAI7M,KAAK0G,EAAL,EAAV;AACA,WAAIe,IAAI,EAAR;AACAhF,cAAOC,IAAP,CAAYmK,CAAZ,EACG1M,OADH,CACW,eAAO;AACdsH,WAAElB,GAAF,IAASsG,EAAEtG,GAAF,EAAOyD,GAAP,CAAW;AAAA,kBAAKnE,EAAE/F,IAAF,IAAU,UAAf;AAAA,UAAX,CAAT;AACD,QAHH;AAIA,cAAO2H,CAAP;AACD,MARD;AASA+F,SAAI,UAAJ,EAAgB;AAAA,cAAMxN,KAAKkG,QAAL,CAAc9E,KAAd,CACnB4I,GADmB,CACf;AAAA,gBAAKnE,EAAEgD,KAAF,CAAQ,MAAR,EAAgB,MAAhB,CAAL;AAAA,QADe,CAAN;AAAA,MAAhB;;AAGA2E,SAAI,YAAJ,EAAkB,YAAM;AACtB,cAAOxN,KAAKS,IAAL,CAAUoK,UAAV,IACP7K,KAAKS,IAAL,CAAUoK,UAAV,CAAqBb,GAArB,CAAyB;AAAA,gBAAM;AAC7BlI,sBAAW+D,EAAE/D,SADgB;AAE7B9B,iBAAM6F,EAAE7F,IAAF,CAAO6I,KAAP,CAAa,MAAb,EAAqB,MAArB,CAFuB;AAG7BmC,kBAAOnF,EAAEmF,KAAF,CAAQhB,GAAR,CAAY;AAAA,oBAAM;AACvBhK,qBAAM6F,EAAE7F,IAAF,CAAO6I,KAAP,CAAa,MAAb,EAAqB,MAArB,CADiB;AAEvB/G,0BAAW+D,EAAE/D;AAFU,cAAN;AAAA,YAAZ,CAHsB;AAO7BiL,sBAAWlH,EAAEkH,SAAF,CAAY/C,GAAZ,CAAgB;AAAA,oBAAM;AAC/BlK,qBAAM+M,EAAE/M,IADuB;AAE/BgN,yBAAUD,EAAEC,QAAF,CAAW9C,GAAX,CAAe;AAAA,wBAAM;AAC7BtI,2BAAQkM,EAAElM,MADmB;AAE7ByL,6BAAU,sBAAUS,EAAET,QAAZ;AAFmB,kBAAN;AAAA,gBAAf;AAFqB,cAAN;AAAA,YAAhB;AAPkB,UAAN;AAAA,QAAzB,CADA;AAgBD,MAjBD;AAkBA,YAAOO,GAAP;AACD,IA9CD;AA+CD,E;;;;;;;;;;;;ACnGD;;sBAEe,UAAC1N,IAAD,EAAOH,QAAP,EAAiBC,IAAjB,EAAuBC,IAAvB,EAAgC;AAC7C;;;;;;;;;;;;;;;;;;AAkBAC,QAAKD,IAAL,GAAY,YAAa;AAAA,uCAATA,IAAS;AAATA,WAAS;AAAA;;AACvB,SAAI,CAACA,KAAKkB,MAAV,EAAkB;AAChB,cAAQjB,KAAKD,IAAL,CAAUqB,KAAV,CAAgBH,MAAhB,IAA0B,CAA3B,GACHjB,KAAKD,IAAL,CAAUqB,KAAV,CAAgB,CAAhB,CADG,GAEHpB,KAAKD,IAAL,CAAUqB,KAFd;AAGD;AACD,SAAI0F,UAAU9G,KAAKD,IAAL,CAAUqB,KAAxB;AACApB,UAAKD,IAAL,CAAUqB,KAAV,GAAkBrB,IAAlB;AACA;;;;;;;;;AASA;;;;;;;;;AASA;;;;;;;;;AASA,uCAAsBC,IAAtB,EAA4B,MAA5B,EACKD,KAAKkB,MAAL,GAAc,CAAd,GAAkBlB,IAAlB,GAAyBA,KAAK,CAAL,CAD9B,EAEK+G,QAAQ7F,MAAR,GAAiB,CAAjB,GAAqB6F,OAArB,GAA+BA,QAAQ,CAAR,CAFpC;AAGA,YAAO9G,IAAP;AACD,IAvCD;AAwCAA,QAAKD,IAAL,CAAUqB,KAAV,GAAkBrB,IAAlB;AACD,E;;;;;;;;;;;;;;+QC9DD;;;AACA;;AACA;;sBAEe,UAACC,IAAD,EAAOH,QAAP,EAAoB;AACjC;;;;;;;;;;;;AAYAG,QAAKc,KAAL,GAAa,UAACV,CAAD,EAAO;AAClB,SAAIA,MAAMwF,SAAV,EAAqB,OAAO5F,KAAKc,KAAL,CAAWM,KAAlB;AACrB,wBAAO,QAAQhB,CAAR,yCAAQA,CAAR,OAAe,QAAtB,EACO,eAAOoE,gBADd;AAEA,SAAIqJ,gBAAgB7N,KAAKc,KAAL,CAAWM,KAA/B;AACA;AACApB,UAAKc,KAAL,CAAWM,KAAX,gBAAuBpB,KAAKc,KAAL,CAAWM,KAAlC,EAA4ChB,CAA5C;AACA;AACA,uCAAsBJ,IAAtB,EAA4B,OAA5B,EAAqCA,KAAKc,KAAL,CAAWM,KAAhD,EAAuDyM,aAAvD;AACA,YAAO7N,IAAP;AACD,IAVD;;AAYAA,QAAKc,KAAL,CAAWM,KAAX,GAAmB;AACjBkG,aAAQ,KADS,EACF;AACfwG,gBAAW;AAFM,IAAnB;;AAKA9N,QAAK2N,OAAL,GAAe,UAAf;AACD,E;;;;;;;;;;;;ACnCD;;AACA;;sBAEe,UAAC3N,IAAD,EAAOH,QAAP,EAAoB;AACjC;AACA;;;;;;;;;;;;;;;;;;;AAmBE;AACFG,QAAK0K,OAAL,GAAe,YAAa;AAC1B,wBAAO,UAAKzJ,MAAZ,EACO,eAAOoD,kBADd;AAEA,SAAIrE,KAAK0K,OAAL,CAAatJ,KAAb,KAAuB,IAA3B,EAAiC;;AAEjC;AACApB,UAAKkG,QAAL,CAAc9E,KAAd,CAAoBjB,OAApB,CAA4B;AAAA,cAAK0F,EAAE6E,OAAF,EAAL;AAAA,MAA5B;AACA;;;;;;;;;;AAUA;;;;;;;AAOA;;;;;;;;AAQA,uCAAsB1K,IAAtB,EAA4B,SAA5B,EAAuC,IAAvC;AACAA,UAAKiG,MAAL,CAAY,IAAZ;AACAjG,UAAK0K,OAAL,CAAatJ,KAAb,GAAqB,IAArB;AACApB,UAAK0G,EAAL,CAAQE,WAAR,GAAsB,EAAtB;;AAEA,YAAO5G,IAAP;AACD,IAtCD;AAuCAA,QAAK0K,OAAL,CAAatJ,KAAb,GAAqB,KAArB;AACD,E;;;;;;;;;;;;ACjED;;AACA;;sBAEe,UAACpB,IAAD,EAAOH,QAAP,EAAiBC,IAAjB,EAAuBC,IAAvB,EAAgC;AAC7C;;;;;;;;;;;;;;;;;;AAkBAC,QAAKe,SAAL,GAAiB,YAAa;AAC5B,wBAAO,UAAKE,MAAZ,EAAoB,eAAOkD,oBAA3B;AACA,YAAOnE,KAAKe,SAAL,CAAegN,IAAf,GACJ/D,GADI,CACA;AAAA,cAAKnE,EAAE/F,IAAF,EAAL;AAAA,MADA,EAEJqI,IAFI,sBAAP;AAGD,IALD;;AAOA;;;;;;;;;;;;;;;;AAgBAnI,QAAKe,SAAL,CAAegN,IAAf,GAAsB,YAAa;AACjC,wBAAO,UAAK9M,MAAZ,EAAoB,eAAOkD,oBAA3B;AACA,YAAOnE,KACJuB,OADI,GAEJyM,OAFI,GAGJ1M,MAHI,CAGGtB,IAHH,CAAP;AAID,IAND;;AAQA;;;;;;;;;;;;;;;;AAgBAA,QAAKe,SAAL,CAAekN,QAAf,GAA0B,YAAa;AACrC,wBAAO,UAAKhN,MAAZ,EAAoB,eAAOkD,oBAA3B;AACA,YAAOnE,KACJuB,OADI,GAEJyM,OAFI,GAGJhE,GAHI,CAGA;AAAA,cAAKnE,EAAE/F,IAAF,EAAL;AAAA,MAHA,CAAP;AAID,IAND;AAOA;;;;;;;;;;;AAWAE,QAAKe,SAAL,CAAemN,QAAf,GAA0B,YAAa;AACrC,wBAAO,UAAKjN,MAAZ,EAAoB,eAAOkD,oBAA3B;AACA,SAAIgK,KAAKnO,KACNF,IADM,GAENiG,KAFM,sBAAT;AAGAoI,QAAGnI,GAAH;AACA,YAAOmI,EAAP;AACD,IAPD;;AASA;;;;;;;;;;;;AAYAnO,QAAKe,SAAL,CAAemK,SAAf,GAA2B,YAAa;AACtC,wBAAO,UAAKjK,MAAZ,EAAoB,eAAOkD,oBAA3B;AACA,SAAInE,KAAKe,SAAL,CAAemK,SAAf,CAAyBmB,KAAzB,KAAmC,IAAvC,EAA6C;AAC3CrM,YAAKe,SAAL,CAAemK,SAAf,CAAyBmB,KAAzB,GAAiCrM,KAChCF,IADgC,GAEhCiG,KAFgC,uBAGhCC,GAHgC,EAAjC;AAID;AACD,YAAOhG,KAAKe,SAAL,CAAemK,SAAf,CAAyBmB,KAAhC;AACD,IATD;AAUArM,QAAKe,SAAL,CAAemK,SAAf,CAAyBmB,KAAzB,GAAiC,IAAjC;AACA;;;;;;;;;;;;;;;;;;;;AAoBArM,QAAKe,SAAL,CAAeqN,IAAf,GAAsB,YAAa;AACjC,wBAAO,UAAKnN,MAAZ,EAAoB,eAAOkD,oBAA3B;AACA,YAAOnE,KAAKe,SAAL,GAAiBgF,KAAjB,sBAAP;AACD,IAHD;;AAKA;;;;;;;;;;;AAWA/F,QAAKe,SAAL,CAAe8K,KAAf,GAAuB,UAACwC,YAAD,EAAepB,YAAf,EAAgC;AACrD,wBACG,OAAQA,YAAR,KAA0B,QAD7B,EAEG,eAAOrJ,eAFV,EAGGqJ,YAHH;;AAKA;AACA,SAAI,CAACqB,iBAAiB,EAACC,IAAIvO,KAAKe,SAAL,CAAemK,SAAf,EAAL,EAAiCrF,GAAG7F,IAApC,EAAjB,EAA4DiN,YAA5D,CAAL,EAAgF,OAAO,KAAP;AAChF;AACA,SAAI,CAACuB,iBAAiBxO,IAAjB,EAAuBA,KAAKF,IAAL,EAAvB,EAAoCuO,aAAatN,SAAb,CAAuB0N,QAAvB,CAAgCxB,YAAhC,CAApC,CAAL,EAAyF,OAAO,KAAP;AACzF;AACA,SAAI,CAACuB,iBAAiBH,YAAjB,EAA+BpB,YAA/B,EAA6CjN,KAAKe,SAAL,CAAe0N,QAAf,CAAwBzO,KAAKF,IAAL,EAAxB,CAA7C,CAAL,EAAyF,OAAO,KAAP;AACzF,YAAO,IAAP;AACD,IAbD;;AAeA;;;;;;AAMA,YAAS0O,gBAAT,CAA2B/H,IAA3B,EAAiCiI,QAAjC,EAA2CC,eAA3C,EAA4D;AAC1D,SAAIC,UAAUF,SACX3I,KADW,uBAEXiE,GAFW,CAEP;AAAA,cAAO,EAAEuE,MAAF,EAAM1I,GAAGY,IAAT,EAAP;AAAA,MAFO,EAGXuH,OAHW,GAIX1M,MAJW,CAIJmF,KACLlF,OADK,GAELyI,GAFK,CAED;AAAA,cAAM,EAAEuE,IAAI1I,EAAE/F,IAAF,EAAN,EAAgB+F,IAAhB,EAAN;AAAA,MAFC,CAJI,CAAd;;AASA,SAAIgJ,cAAcF,gBAAgB5I,KAAhB,uBAAoCiI,OAApC,EAAlB;AACA,YAAOa,YAAYC,KAAZ,CAAkB,mBAAW;AAClC,WAAIC,eAAe,KAAnB;AACA,cAAOH,QAAQ3N,MAAf,EAAuB;AACrB,aAAImJ,IAAIwE,QAAQxD,KAAR,EAAR;AACA,aAAIkD,iBAAiBlE,CAAjB,EAAoB4E,OAApB,CAAJ,EAAkC;AAChCD,0BAAe,IAAf;AACA;AACD;AACF;AACD,cAAOA,YAAP;AACD,MAVM,CAAP;AAWD;;AAED;;;;;;;;;;;;AAYA/O,QAAKe,SAAL,CAAe0N,QAAf,GAA0B,UAACN,EAAD,EAAQ;AAChC,wBACG,OAAQA,EAAR,KAAgB,QADnB,EAEG,eAAOvK,eAFV,EAGGuK,EAHH;;AAKA,SAAIc,WAAWd,GAAGpI,KAAH,sBAAf;AACA,SAAIkJ,SAAShO,MAAT,GAAkB,CAAlB,IACFjB,KAAKuB,OAAL,CAAa4E,GAAb,CAAiB8I,SAAS,CAAT,CAAjB,CADF,EACiC;AAC/BA,gBAAS,CAAT,IAAcjP,KAAKuB,OAAL,CAAamI,GAAb,CAAiBuF,SAAS,CAAT,CAAjB,EAA8B3M,IAA9B,EAAd;AACD;;AAED,YAAO2M,SAAS9G,IAAT,sBAAP;AACD,IAbD;AAcD,E;;AAED;;;;;;;;AAMA,UAASmG,gBAAT,OAAoCY,YAApC,EAAkD;AAAA,OAAtBX,EAAsB,QAAtBA,EAAsB;AAAA,OAAlB1I,CAAkB,QAAlBA,CAAkB;;AAChD,OAAMsJ,oBAAoB,yBAAaD,YAAb,CAA1B;;AAEA,OAAMrD,QAAQ0C,OAAO,GAAP,IACZY,sBAAsB,GADV,IAEZtJ,EAAEvD,IAAF,OAAa6M,iBAFD,IAGZZ,OAAOY,iBAHT;;AAKA,UAAOtD,KAAP;AACD,E","file":"nflow.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 956a2143dcc7b149f9cf","import nflow from './nflow'\nif (global) global.nflow = global.nFlow = nflow // nFlow is now deprecated\nmodule.exports = nflow\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","import factory from './factory'\nimport {DEFAULTS} from './consts'\nimport logger from './logger'\n\nvar root = factory(DEFAULTS, 'flow', [])\nlogger.init(root)\nexport default root\n\n\n\n// WEBPACK FOOTER //\n// ./src/nflow.js","import behaviours from './behaviours'\nexport default (defaults, name, data) => {\n    /* jshint ignore:start */\n  /**\n   * nflow library\n   * @class flow\n   *\n   * @example\n   * let a = nflow.create('a')\n   * let b = nflow.create('b')\n   *\n   * let c = a.create('c')\n   * let d = a.create('d')\n   */\n    /* jshint ignore:end */\n  var flow = defaults.factory()\n\n  defaults\n    .behaviours\n    .forEach((d) => {\n      behaviours[d](flow, defaults, name, data)\n    })\n  return flow\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/factory.js","import cancellable from './cancellable'\nimport connect from './connect'\nimport create from './create'\nimport emit from './emit'\nimport identify from './identify'\nimport listen from './listen'\nimport loggable from './loggable'\nimport stateful from './stateful'\nimport stats from './stats'\nimport disposable from './disposable'\nimport namespace from './namespace'\n\nexport default {\n  cancellable,\n  connect,\n  create,\n  disposable,\n  emit,\n  identify,\n  listen,\n  loggable,\n  stateful,\n  stats,\n  namespace\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/behaviours/index.js","import { ERRORS\n       , STATUS\n       , DIRECTION\n       , DIRECTION_BITMASK\n       , UNSET } from '../consts'\nimport { assert, dispatchInternalEvent } from '../utils'\n\nexport default (flow, defaults, name) => {\n  /**\n   * Cancel the current {@link flow} node.\n   *\n   * Cancelling has the following effects:\n   *  - Cancelled nodes cannot receive events.\n   *  - Cancelled nodes cannot emit events.\n   *  - Cancelled nodes cannot propagate events.\n   *  - <b>All</b> child nodes of a cancelled node <b>are also cancelled recursively</b>.<br>\n   *\n   * Cancellation is final, cancelled nodes cannot be un-cancelled.\n   * @method\n   * @memberof module:flow\n   * @return {flow} flow - the current {@link flow} node\n   * @liveexample\n   * let foo = nflow.create('foo')\n   *   .on('hello', cb)\n   *\n   * foo.cancel()\n   * @emits 'flow.cancel'\n   * @emits 'flow.children.cancel'\n   * @emits 'flow.parent.cancel'\n   */\n  flow.cancel = (...args) => {\n    assert(args.length\n         , ERRORS.invalidCancelArgs)\n    let previousValue = flow.cancel.value\n    flow.cancel.value = true\n    /**\n     *\n     * Dispatched when a node has been cancelled.\n     * @event 'flow.cancel'\n     * @property {flow} flow - the node to be cancelled.\n     * @see flow.cancel\n     * @example\n     * nflow.create('timer-service')\n     *   .on('flow.cancel', stopTimer)\n     */\n    /**\n     *\n     * Dispatched when one of the node's parents has been cancelled.\n     * @event 'flow.parent.cancel'\n     * @property {flow} flow - the node to be cancelled.\n     * @see flow.cancel\n     */\n    /**\n     *\n     * Dispatched when one of the node's children(recursive) has been cancelled.\n     * @internal\n     * @event 'flow.children.cancel'\n     * @property {flow} flow - the node to be cancelled.\n     * @see flow.cancel\n     */\n    dispatchInternalEvent(flow, 'cancel', true, previousValue)\n    return flow\n  }\n  flow.cancel.value = false\n\n  /**\n   * @memberof module:flow\n   * @readonly\n   * @return {Boolean} `true` if the node or any of the node's parents have been cancelled, else `false`\n   */\n  flow.isCancelled = () => {\n    return [flow]\n      .concat(flow.parents())\n      .some(e => e.status() === STATUS.CANCELLED ||\n         e.status() === STATUS.DISPOSED)\n  }\n\n  /**\n   * Stop or augments propagation of the emitted event.\n   *\n   * If the method is called with no parameters, the event will not be delivered to other listeners.\n   * ```\n   * .on('price-update', function(){\n   *   this.stopPropagation() // no further listeners will receive the event\n   * })\n   * ```\n   * If a {@link flow.DIRECTION|direction} is given, the event propagation gets restricted in the given direction.\n   * ```\n   * foo.on('price-update', function(){\n   *    // child nodes of `foo` will not receive the `price-update` event\n   *    this.stopPropagation('DOWNSTREAM')\n   * })\n   * ```\n   * @tutorial propagation\n   * @see flow.propagationStopped\n   * @param  {DIRECTION} [direction] Optional direction for augmenting the event propagation\n   * @return {flow} flow - the current {@link flow} node\n   * @emits 'flow.propagationStopped'\n   * @emits 'flow.children.propagationStopped'\n   * @emits 'flow.parent.propagationStopped'\n   * @emits 'flow.propagationAugmented'\n   * @emits 'flow.children.propagationAugmented'\n   * @emits 'flow.parent.propagationAugmented'\n   */\n  flow.stopPropagation = (direction = UNSET) => {\n    direction !== UNSET && assert(!DIRECTION[direction.toUpperCase()]\n         , ERRORS.invalidStopPropagationArgs)\n\n    if (direction === UNSET) {\n      flow.status.set(STATUS.STOPPED)\n      flow.emit.targets = []\n      flow.stopPropagation.value = true\n      flow.stopPropagation.modifiers[flow.target.guid] = -1 // bitmask fill\n      /**\n       *\n       * Dispatched when a dispatched event's propagation has been stopped.\n       * @event 'flow.propagationStopped'\n       * @property {flow} flow - the node that has stopped propagating\n       * @see flow.stopPropagation\n       * @example\n       * nflow.create('timer-service')\n       *   .on('flow.propagationStopped', cb)\n       */\n      /**\n       *\n       * Dispatched when one of the node's parents' propagation has been stopped.\n       * @event 'flow.parent.propagationStopped'\n       * @property {flow} flow - the node that has stopped propagating.\n       * @see flow.stopPropagation\n       */\n      /**\n       *\n       * Dispatched when one of the node's children(recursive) has stopped propagating.\n       * @internal\n       * @event 'flow.children.propagationStopped'\n       * @property {flow} flow - the node that has stopped propagating\n       * @see flow.stopPropagation\n       */\n      dispatchInternalEvent(flow, 'propagationStopped', true)\n    } else {\n      let d = DIRECTION[direction.toUpperCase()]\n      /**\n       *\n       * Dispatched when a dispatched event's propagation has been augmented.\n       * @event 'flow.propagationAugmented'\n       * @property {flow} flow - the affected node\n       * @property {object} changes - The changes applied to the emitted event\n       * @property {DIRECTION} changes.direction - The changes applied to the emitted event\n       * @property {flow} changes.target - The node that augmented the event flow\n       * @see flow.stopPropagation\n       *\n       */\n      /**\n       *\n       * Dispatched when one of the node's parents' propagation has been augmented.\n       * @event 'flow.parent.propagationAugmented'\n       * @property {flow} flow - the affected node.\n       * @property {object} changes - The changes applied to the emitted event\n       * @property {DIRECTION} changes.direction - The changes applied to the emitted event\n       * @property {flow} changes.target - The node that augmented the event flow\n       * @see flow.stopPropagation\n       */\n      /**\n       *\n       * Dispatched when the propagation of one of the node's children(recursive) has been augmented.\n       * @internal\n       * @event 'flow.children.propagationAugmented'\n       * @property {flow} flow - the affected node.\n       * @property {object} changes - The changes applied to the emitted event\n       * @property {DIRECTION} changes.direction - The changes applied to the emitted event\n       * @property {flow} changes.target - The node that augmented the event flow\n       * @see flow.stopPropagation\n       */\n      dispatchInternalEvent(flow, 'propagationAugmented', {\n        direction: d,\n        target: flow.target\n      })\n      flow.stopPropagation.modifiers[flow.target.guid.value] |= DIRECTION_BITMASK[d]\n    }\n    return flow\n  }\n\n  flow.stopPropagation.value = false\n  flow.stopPropagation.modifiers = {}\n  createStopPropagationModifiers(flow)\n\n  /**\n   * @readonly\n   * @tutorial propagation\n   * @see flow.stopPropagation\n   * @return {Boolean} `true` if the propagation was completely stopped, else `false` (even if the propagation was augmented).\n   *\n   */\n  flow.propagationStopped = () => {\n    return flow.stopPropagation.value\n  }\n}\n/*\n *  create directional (eg. `flow.stopPropagation.dowsntream(...)`) API\n */\nfunction createStopPropagationModifiers (flow) {\n  Object.keys(DIRECTION)\n    .forEach(direction => {\n      flow.stopPropagation[direction] =\n      flow.stopPropagation[direction.toLowerCase()] =\n        () => flow.stopPropagation(direction)\n    })\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/behaviours/cancellable.js","export const UNSET = {}\n\n/**\n * Enum for the direction event propagation\n * @enum {String}\n * @readonly\n * @name DIRECTION\n * @property {String} CURRENT - the event is only propagated to the current node\n * @property {String} DEFAULT - the event bubbles up to root parent(the parent that has no other parents), then traverses **depth-first** to all child nodes\n * @property {String} UPSTREAM - The event bubbles up to the root node\n * @property {String} DOWNSTREAM - the event traverses **depth-first** all child nodes\n */\nexport const DIRECTION = {\n  CURRENT: 'CURRENT',\n  NONE: 'CURRENT', // deprecated\n  DEFAULT: 'DEFAULT',\n  UPSTREAM: 'UPSTREAM',\n  DOWNSTREAM: 'DOWNSTREAM'\n}\n\nexport const DIRECTION_BITMASK = {\n  CURRENT: 1 << 0,\n  NONE: 1 << 0, // 1 deprecated\n  DEFAULT: 1 << 1, // 2\n  UPSTREAM: 1 << 2, // 4\n  DOWNSTREAM: 1 << 3 // 8\n}\n\n/**\n * Enum for decribing the status of a flow node.\n *\n * Use {@link flow.status}() to get the status of a flow instance.\n * @enum\n * @readonly\n * @property {String} ACTIVE (Default) The node can emit(or be emitted), propagate or listen to events.\n * @property {String} FLOWING The node has been emitted(so it is now treated as an event), but it hasn't been delivered to all listeners yet.\n * @property {String} STOPPED The event propagation was stopped. See {@link flow.stopPropagation}\n * @property {String} COMPLETED The event has been propagated to all listeners.\n * @property {String} CANCELLED The event has been cancelled. See {@link flow.cancel}\n * @property {String} DISPOSED The event has been disposed. See {@link flow.dispose}\n */\nexport const STATUS = {\n  IDLE: 'IDLE',\n  FLOWING: 'FLOWING',\n  STOPPED: 'STOPPED',\n  COMPLETED: 'COMPLETED',\n  CANCELLED: 'CANCELLED',\n  DISPOSED: 'DISPOSED'\n}\n\nexport const DEFAULTS = {\n  factory: () => ({}),\n  behaviours: [\n    'identify',\n    'stateful',\n    'connect',\n    'create',\n    'disposable',\n    'emit',\n    'listen',\n    'cancellable',\n    'loggable',\n    'stats',\n    'namespace'\n  ],\n  direction: DIRECTION.DEFAULT\n}\nexport const ERRORS = {\n  invalidGuid: 'Invalid Argument. Guid-s are immutable. Please use the .name() API to change the name of a flow object.',\n  invalidChildren: 'Invalid Argument. Please use child.parent(parent) to re-parent flow objects.',\n  invalidListener: 'Invalid Arguments. Expected a String as the listenerName, got: %s',\n  invalidListenerType: 'Invalid Listener function. Expected a function, got: %s',\n  invalidEventName: 'Invalid Arguments. Please use .emit(\"foo\", payload) to emit a flow event.',\n  invalidName: 'Invalid flow Name. Expected a String value, got: %s',\n  invalidParent: 'Invalid flow parent object. Expected a flow instance, got: %s',\n  invalidParents: 'Invalid Argument. Please use the child.parent(parent) API to re-parent flow objects.',\n  invalidStatus: 'Invalid Argument. The .status() API is read only',\n  invalidNamespaceArgs: 'Invalid Argument. The .namespace() API is read only',\n  invalidFullNamespace: 'Invalid Argument. The .namespace.match(full_ns) requires a full namespace array, got: %s',\n  invalidDisposeArgs: 'Invalid Argument. The .dispose() API requires no parameters',\n  invalidCancelArgs: 'Invalid Argument. The .cancel() API requires no parameters',\n  invalidStopPropagationArgs: 'Invalid Argument. The .stopPropagation(direction) API requires either no parameters or a valid flow direction(eg. flow.direction.UPSTREAM)',\n  invalidStopPropagationAugmentation: 'Invalid Argument. The .stopPropagation(direction) API can only be used on emitted events.',\n  invalidRoot: 'Invalid Argument. The .parents.root() API is read only',\n  invalidStatsArgs: 'Invalid Argument. The .stats() API requires an object'\n}\n\nexport const NS_SEPARATOR = ':'\n\n\n\n// WEBPACK FOOTER //\n// ./src/consts.js","import factory from '../factory'\nimport { DEFAULTS\n       , NS_SEPARATOR } from '../consts'\nimport logger from '../logger'\n\nexport {serialise} from './serialiser'\n/*\n *  utils\n */\nexport function assert (condition, error, val) {\n  if (condition) {\n    throw new Error(error\n      .replace('%s', val))\n  }\n  return condition\n}\n\nexport function isFlow (flow) {\n  return flow &&\n    flow.name &&\n    flow.name.isFlow\n}\n\nexport function isInternal (flow) {\n  return flow &&\n    flow.name &&\n    flow.name.isInternal\n}\n\nexport function createMatcher (matcher) {\n  // match ALL\n  if (matcher === true) return () => true\n  // match NONE\n  if (matcher === null || matcher === undefined || matcher === false) return () => false\n  // match by name\n  if (typeof (matcher) === 'string') { return f => f.name() === matcher }\n  // match by regex\n  if (typeof (matcher) === 'object' && matcher.test) return f => matcher.test(f.name())\n  // match by instance\n  if (isFlow(matcher)) return f => f === matcher\n  // custom matcher\n  return matcher\n}\n\n/*\n * returns the Local Name fragment of a namespaced listener or node name.\n * @example\n * 'a:b:foo' -> 'foo'\n * @param  {String} name Listener or node name\n * @return {String} the local name segment\n */\nexport function getLocalName (name) {\n  return name\n    .split(NS_SEPARATOR)\n    .pop()\n}\n\nexport function detach (flow) {\n  flow.parent() &&\n  flow.parent().children.detach(flow)\n}\n\nexport function isDetached (flow) {\n  return !flow.parent() ||\n  !flow.parent().children.has(flow)\n}\n\nexport function flatten (array) {\n  return [].concat.apply([], array)\n}\n\nexport function merge (source, target) {\n  Object.keys(source).forEach(key => {\n    target[key] = source[key]\n  })\n}\n\nexport function invalidateListenerCache (flow) {\n  if (!flow) return\n  updateListenerCache(flow)\n  flow.parents().forEach(updateListenerCache)\n}\n\nfunction updateListenerCache (node) {\n  node.on.listenerCache = {}\n  for (let key in node.on.listenerMap) {\n    node.on.listenerCache[getLocalName(key)] = true\n  }\n  node.children.value.forEach(f => {\n    for (let key in f.on.listenerCache) {\n      node.on.listenerCache[getLocalName(key)] = true\n    }\n  })\n}\n\nexport function dispatchInternalEvent (flow, name, newData, oldData) {\n  if (isIgnored(flow)) return\n  if (isFlow(newData) && newData.name.isInternal) return\n\n  let current = factory(DEFAULTS, 'flow.' + name)\n  current.name.isInternal = true\n  current.data.value = [newData, oldData]\n  current.parent.value = flow\n  current.emit.current()\n\n  let up = factory(DEFAULTS, 'flow.children.' + name)\n  up.name.isInternal = true\n  up.data.value = [flow, newData, oldData]\n  up.parent.value = flow.parent()\n  up.emit.upstream()\n\n  let down = factory(DEFAULTS, 'flow.parent.' + name)\n  down.name.isInternal = true\n  down.data.value = [flow, newData, oldData]\n  flow.children.value.forEach(f => f.emit.downstream(down))\n\n  logger.log(flow, name, newData, oldData)\n}\n\nfunction isIgnored (flow) {\n  return flow.name.isInternal || [flow]\n    .concat(flow.parents())\n    .some(e => e.stats.value.ignore)\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils/index.js","export const serialise = o => JSON.stringify(o, replacer())\n\nconst RECURSION_LIMIT = 1024\n\nfunction replacer () {\n  let stack = []\n  let r = 0\n  let i\n  return function replacer (key, value) {\n    if (key === '') {\n      stack = []\n      r = 0\n    }\n    let val = parseValue(value)\n    if (val !== undefined) return val\n    if (!value || RECURSION_LIMIT < ++r) return undefined\n    i = stack.indexOf(value)\n    if (i < 0) return stack.push(value) && value\n    return '*Recursive' + i\n  }\n}\n\nfunction parseValue (value) {\n  switch (typeof value) {\n    case 'function':\n      return ''.concat(\n          'function ',\n          value.name || 'anonymous',\n          '(',\n            Array(value.length + 1).join(',arg').slice(1),\n          ')'\n        )\n    case 'boolean':\n    case 'number':\n    case 'string':\n      return value\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils/serialiser.js","import {isInternal, serialise} from './utils'\nimport { UNSET } from './consts'\n\nvar loggers = []\n\nfunction log (flow, name, newData, oldData) {\n  if (!isInternal(flow)) {\n    loggers.forEach(f => {\n      f.isRemote\n        ? f.logger(remoteLog(flow, name, newData, oldData), flow)\n        : f.logger(flow, name, newData, oldData)\n    })\n    debug(flow, name, newData, oldData)\n  }\n}\n\nfunction debug (flow, name, newData, oldData) {\n  typeof global !== 'undefined' &&\n  global.__nflow_devtools_hook__ &&\n  global.__nflow_devtools_hook__(\n    remoteLog(flow, name, newData, oldData), flow)\n}\n\nconst propMap = {\n  'start': ['version', 'status'],\n  'cancel': ['status'],\n  'create': ['status'],\n  'emitted': ['recipients']\n}\n/*\n *  Converts a local log message(direct references) to a remote one(unmarshallable)\n */\nfunction remoteLog (flow, name, d, d0) {\n  let o = {\n    flow: flow.toObj('name', 'guid'),\n    action: name\n  }\n  let props = ['name', 'guid']\n  propMap[name] && props.push(...propMap[name])\n  if (name === 'create' && d.data() !== undefined) props.push('data')\n  let newData = (d && d.toObj ? d.toObj(...props) : serialise(d))\n  let oldData = (d0 && d0.toObj ? d0.toObj(...props) : serialise(d0))\n  if (newData !== undefined) o.d = newData\n  if (oldData !== undefined) o.d0 = oldData\n  return o\n}\n\nfunction init (flow) {\n  flow.enableDevTools = (enabled = true) => {\n    console.warn('flow.enableDevtools() is now deprecated. nflow-devtools will automatically start logging when Chrome devtools is open')\n    return flow\n  }\n\n  flow.logger = (logger = UNSET, isRemote = false) => {\n    if (logger === UNSET) return loggers\n    else loggers.push({logger, isRemote})\n    return flow\n  }\n  flow.logger.reset = () => { loggers = [] }\n  debug(flow, 'start', flow)\n}\n\nexport default {\n  init,\n  log\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/logger.js","import { assert,\n  detach,\n  isFlow,\n  dispatchInternalEvent,\n  invalidateListenerCache,\n  createMatcher } from '../utils'\nimport { ERRORS } from '../consts'\n\nexport default (flow) => {\n  /**\n   * Return the immediate child nodes of the current node.\n   * **Getter only.**\n   *\n   * To create new child nodes, use the {@link flow.create} API.\n   * To reparent existing nodes, use the {@link flow.parent} API.\n   * > **Note:**\n   * > Note: this API only returns the immediate children of the current node.\n   * > To get all downstream nodes recursively, use the {@link flow.children.all} API.\n   * @see flow.parent\n   * @see flow.create\n   * @readonly\n   * @return {flow[]} children - Array of child nodes\n   */\n  flow.children = (...args) => {\n    assert(args.length, ERRORS.invalidChildren)\n    return flow.children.value.concat()\n  }\n  flow.children.value = []\n\n  /**\n   * Check if the given node exists.\n   * @alias children.has\n   * @memberof flow\n   * @param  {(String|Function|RegEx|flow)} matcher Matcher expression:\n   *   ```\n   *   // function:\n   *   .has(node => node.data() === 5)\n   *\n   *   // string:\n   *   .has('foo')\n   *\n   *   // regex\n   *   .has(/$foo[a-Z]*^/)\n   *\n   *   // flow\n   *   .has(flowInstance)\n   *   ```\n   * @param  {Boolean}  [recursive=true] recursive search or immediate children only.\n   * @return {Boolean} `true` if the matcher finds at least one node, else `false`.\n   */\n  flow.children.has = (matcher, recursive = true) => flow.children.find(matcher, recursive) !== undefined\n\n  /**\n   * > **Aliases:**\n   * > - `children.find`\n   * @alias children.get\n   * @memberof flow\n   * @param  {(String|Function|RegEx|flow)} matcher Matcher expression:\n   *   ```\n   *   // function:\n   *   .children.get(node => node.data() === 5)\n   *\n   *   // string:\n   *   .children.get('foo')\n   *\n   *   // regex\n   *   .children.get(/$foo[a-Z]*^/)\n   *\n   *   // flow\n   *   .children.get(flowInstance)\n   *   ```\n   * @param  {Boolean}  [recursive=true] recursive search or immediate children only.\n   * @return {flow|undefined} The first child node that matches the filter criteria, else `undefined`\n   */\n  flow.children.find = (matcher, recursive = true) => flow.children.find.all(matcher, recursive).pop()\n\n  /**\n   * Find a child node based on a search criteria.\n   *\n   * > **Aliases:**\n   * > - `children.find.all`\n   * > - `children.findAll` (DEPRECATED)\n   * @alias children.get.all\n   * @memberof flow\n   * @param  {(String|Function|RegEx|flow)} matcher Matcher expression:\n   *   ```\n   *   // function:\n   *   .children.get.all(node => node.data() === 5)\n   *\n   *   // string:\n   *   .children.get.all('foo')\n   *\n   *   // regex\n   *   .children.get.all(/$foo[a-Z]*^/)\n   *\n   *   // flow\n   *   .children.get.all(flowInstance)\n   *   ```\n   * @param  {Boolean}  [recursive=true] recursive search or immediate children only.\n   * @return {flow[]} All child nodes that match the filter criteria\n   */\n  flow.children.find.all = (matcher, recursive) => {\n    let filter = createMatcher(matcher)\n    var children = recursive\n      ? flow.children.all()\n      : flow.children.value\n    return children.filter(filter)\n  }\n\n  flow.children.findAll = flow.children.find.all\n  flow.get = flow.children.find\n  flow.get.all = flow.children.find.all\n  flow.getAll = flow.children.findAll\n\n  /**\n   * Return all child nodes recursively.\n   *\n   * @alias children.all\n   * @memberof flow\n   * @return {flow[]} All child nodes of the current node (recursive)\n   */\n  flow.children.all = (...args) => {\n    assert(args.length, ERRORS.invalidChildren)\n    var childMap = {}\n    return getChildren(flow)\n\n    function getChildren (flow) {\n      if (childMap[flow.guid()]) return []\n      childMap[flow.guid()] = true\n      var c = flow.children.value\n      var gc = flow.children.value.map(getChildren)\n\n      return c.concat.apply(c, gc)\n    }\n  }\n  /**\n   * Get or set the the parent of the current node.\n   *\n   * **Reparenting:**\n   * ```\n   * let a = nflow.create('a')\n   * let b = nflow.create('b')\n   * a.parent(b) // reparent a onto b\n   * ```\n   *\n   * **Unparenting:**\n   * You can create a new standalone tree by setting the `parent` to `null`.\n   * ```\n   * let a = nflow.create('a')\n   * a.parent(null) // unparent `a` to form a new tree\n   * ```\n   *\n   * @param {(flow|null)} [parent] - the new parent node\n   * @returns {flow|null}\n   * (setter) The current flow node if a `parent` argument was given.\n   * (getter) The parent node of the current flow node if no arguments were given.\n   * (getter) `null` if no arguments were given and the current node has no parent.\n   * @emits 'flow.parent'\n   * @emits 'flow.parent.parent'\n   * @emits 'flow.children.parent'\n   * @emits 'flow.parented'\n   * @emits 'flow.parent.parented'\n   * @emits 'flow.children.parented'\n   */\n  flow.parent = (...parentArgs) => {\n    // TODO: accept an index parameter for attaching the flow node as the nth child\n    if (!parentArgs.length) return flow.parent.value\n    var parent = parentArgs[0]\n    parent && assert(!isFlow(parent), ERRORS.invalidParent, parent)\n    var previousParent = flow.parent()\n    detach(flow)\n    /**\n     *\n     * Dispatched when a node is about to be reparented.\n     * @event 'flow.parent'\n     * @property {flow} flow - the node to be reparented.\n     * @property {flow} newParent - the the new parent node\n     * @property {flow} oldParent - the the old parent node\n     * @see flow.parent\n     */\n    /**\n     *\n     * Dispatched when one of the node's parents is about to be reparented.\n     * @event 'flow.parent.parent'\n     * @property {flow} flow - the node to be reparented.\n     * @property {flow} newParent - the the new parent node\n     * @property {flow} oldParent - the the old parent node\n     * @see flow.parent\n     */\n    /**\n     *\n     * Dispatched when ove of the node's children(recursive) is about to be reparented.\n     * @event 'flow.children.parent'\n     * @property {flow} flow - the node to be reparented.\n     * @property {flow} newParent - the the new parent node\n     * @property {flow} oldParent - the the old parent node\n     * @see flow.parent\n     */\n    dispatchInternalEvent(flow, 'parent', parent, previousParent)\n    attach(parent)\n    /**\n     *\n     * Dispatched when a node has been reparented.\n     * @event 'flow.parented'\n     * @property {flow} flow - the reparented node.\n     * @property {flow} newParent - the the new parent node\n     * @property {flow} oldParent - the the old parent node\n     * @see flow.parent\n     */\n    /**\n     *\n     * Dispatched when one of the node's parents has been reparented.\n     * @event 'flow.parent.parented'\n     * @property {flow} flow - the reparented node.\n     * @property {flow} newParent - the the new parent node\n     * @property {flow} oldParent - the the old parent node\n     * @see flow.parent\n     */\n    /**\n     *\n     * Dispatched when ove of the node's children(recursive) has been reparented.\n     * @event 'flow.children.parented'\n     * @property {flow} flow - the reparented node.\n     * @property {flow} newParent - the the new parent node\n     * @property {flow} oldParent - the the old parent node\n     * @see flow.parent\n     */\n    dispatchInternalEvent(flow, 'parented', parent, previousParent)\n    return flow\n  }\n\n  /**\n   * Return an array of all parent nodes, starting from the elements parent, going upstream until a root node is found.\n   * @returns {flow[]} All parent nodes starting from the immediate parent to the root\n   */\n  flow.parents = (...args) => {\n    assert(args.length, ERRORS.invalidParents)\n    var parentMap = {}\n    var parents = []\n    var p = flow.parent()\n    while (p && !parentMap[p.guid()]) {\n      parents.push(p)\n      parentMap[p.guid()] = true\n      p = p.parent()\n    }\n    return parents\n  }\n\n  /**\n   * Find a parent node based on a search criteria.\n   *\n   * > **Aliases:**\n   * > - `parents.find`\n   * @alias parents.get\n   * @memberof flow\n   * @param  {(String|Function|RegEx|flow)} matcher Matcher expression:\n   *   ```\n   *   // function:\n   *   .parents.get(node => node.data() === 5)\n   *\n   *   // string:\n   *   .parents.get('foo')\n   *\n   *   // regex\n   *   .parents.get(/$foo[a-Z]*^/)\n   *\n   *   // flow\n   *   .parents.get(flowInstance)\n   *   ```\n   * @return {flow|undefined} The nearest parent node that matches the criteria, else `undefined`\n   */\n  flow.parents.find = (matcher) => {\n    if (matcher === null) return null\n    var filter = matcher\n    if (typeof (matcher) === 'string') filter = f => f.name() === matcher\n    else if (isFlow(matcher)) filter = f => f === matcher\n\n    return flow.parents()\n      .filter(filter)\n      .pop()\n  }\n  flow.parents.get = flow.parents.find\n\n  /**\n   * Check if the given parent node exists.\n   * @alias parents.has\n   * @memberof flow\n   * @param  {(String|Function|RegEx|flow)} matcher Matcher expression:\n   *   ```\n   *   // function:\n   *   .parents.has(node => node.data() === 5)\n   *\n   *   // string:\n   *   .parents.has('foo')\n   *\n   *   // regex\n   *   .parents.has(/$foo[a-Z]*^/)\n   *\n   *   // flow\n   *   .parents.has(flowInstance)\n   *   ```\n   * @return {Boolean} `true` if the matcher finds at least one node, else `false`.\n   */\n  flow.parents.has = (matcher) => (\n    !!flow.parents.find(matcher)\n  )\n\n  /**\n   * Return the last node in the parent chain, ie. the node that has no further parents.\n   * @alias parents.root\n   * @memberof flow\n   * @return {flow|undefined} The root node if the current node has at least one parent, else `undefined`\n   */\n  flow.parents.root = (...args) => {\n    assert(args.length, ERRORS.invalidRoot)\n    return flow\n      .parents()\n      .pop()\n  }\n\n  /**\n   * @internal\n   */\n  flow.children.detach = (child) => {\n    flow.children.value =\n      flow.children.value\n        .filter(f => f !== child)\n    invalidateListenerCache(flow)\n  }\n\n  flow.target = flow\n\n  function attach (parent) {\n    flow.parent.value = parent\n    if (parent) {\n      parent.children.value.push(flow)\n      invalidateListenerCache(parent)\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/behaviours/connect.js","import factory from '../factory'\nimport { dispatchInternalEvent } from '../utils'\n\nexport default (flow, defaults) => {\n  /* jshint ignore:start */\n  /**\n   * Create a new flow instance.\n   * > **Note**: The parent of the newly created {@link flow} node is automatically set\n   * to the flow node it was created from.\n   * >\n   * > To create a new event tree that's not connected to existing nodes, simply unparent it after creation:\n   * > ```\n   * > let a = nflow\n   * >   .create('new-tree')\n   * >   .parent(null)\n   * > ```\n   * **Aliases**\n   * The following command chains have identical end results:\n   * - `.create('a', someData)`\n   * - `.create('a').data(someData)`\n   * - `.create().name('a').data(someData)`\n   *\n   * @memberof flow\n   * @param {string} name The name of the new node\n   * @param {...object} [data] optional data stored in the new node\n   * @returns {flow} the new flow instance\n   * @example\n   * let a = nflow.create('a')\n   * let b = nflow.create('b')\n   *\n   * let c = a.create('c')\n   * let d = a.create('d')\n   *\n   * @example <caption>second demo:</caption>\n   * let a = nflow.create('a')\n   * let b = nflow.create('b')\n   *\n   * @emits 'flow.create'\n   * @emits 'flow.parent.create'\n   * @emits 'flow.children.create'\n   */\n  /* jshint ignore:end */\n  flow.create = (name, ...data) => {\n    var instance = factory(flow.create.defaults, name, data)\n    instance.parent.value = flow\n    flow.children.value.push(instance)\n    inheritStats(instance)\n\n    /**\n     *\n     * Dispatched when a node has been created.\n     * @event 'flow.create'\n     * @property {flow} flow - the node where the new node was created from(ie. the parent).\n     * @property {flow} newNode - the created node.\n     * @see flow.create\n     */\n    /**\n     *\n     * Dispatched when one of the node's parents has been created.\n     * @event 'flow.parent.create'\n     * @property {flow} flow - the node where the new node was created from(ie. the parent).\n     * @property {flow} newNode - the created node.\n     * @see flow.create\n     */\n    /**\n     *\n     * Dispatched when ove of the node's children(recursive) has been created.\n     * @event 'flow.children.create'\n     * @property {flow} flow - the node where the new node was created from(ie. the parent).\n     * @property {flow} newNode - the created node.\n     * @see flow.create\n     */\n    dispatchInternalEvent(flow, 'create', instance)\n\n    return instance\n  }\n\n  /**\n   * Create a new flow node or return the existing one if the current node already has a child with the same name.\n   * If multiple children have the same name, the first one will be returned.\n   * If `...data` parameters are given, it will also set the data on the newly created or existing node.\n   * @alias create.once\n   * @memberof flow\n   * @param {string} name The name of the new node\n   * @param {...object} [data] optional data stored in the node\n   * @returns {flow} the newly created or already existing flow instance\n   */\n  flow.create.once = (name, ...data) => {\n    let instance = flow.get(name)\n    if (instance) instance.data(...data)\n    else instance = flow.create(name, ...data)\n    return instance\n  }\n\n  /**\n   * @internal\n   * @type {Object}\n   */\n  flow.create.defaults = {\n    factory: defaults.factory,\n    behaviours: defaults.behaviours.concat(),\n    direction: defaults.direction\n  }\n}\n\nfunction inheritStats (flow) {\n  let p = flow.parent()\n  if (p) {\n    let defaults = p.stats.value.defaults || {}\n    let nodeDefaults = defaults[flow.name.value] || {}\n    /* jshint ignore:start */\n    flow.stats.value = {...nodeDefaults}\n    /* jshint ignore:end */\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/behaviours/create.js","import { ERRORS\n       , STATUS\n       , DIRECTION\n       , DIRECTION_BITMASK\n       , UNSET } from '../consts'\nimport { merge\n       , detach\n       , assert\n       , isFlow\n       , getLocalName\n       , dispatchInternalEvent } from '../utils'\nimport routes from '../routes'\n\nexport default (flow) => {\n  /**\n   * return the current status of the node\n   * @readonly\n   * @return {STATUS} The current status of the node\n   */\n  flow.status = (...args) => {\n    assert(args.length\n         , ERRORS.invalidStatus)\n    if (flow.cancel.value) return STATUS.CANCELLED\n    if (flow.dispose.value) return STATUS.DISPOSED\n    return flow.status.value\n  }\n\n  /**\n   * @internal\n   * @param {STATUS} The new status of the node\n   */\n  flow.status.set = (status) => {\n    if (status === flow.status.value) return\n    !flow.name.isInternal && dispatchInternalEvent(flow, 'status', status, flow.status.value)\n    flow.status.value = status\n  }\n  flow.status.value = STATUS.IDLE\n  merge(STATUS, flow.status)\n\n  /**\n   * Set the traversal direction of the node.\n   * The direction defines how the node traverses the event tree when it's emitted.\n   * @param  {DIRECTION} [direction] The traversal direction\n   * @return {flow} The current flow node\n   */\n  flow.direction = (direction = UNSET) => {\n    if (direction === UNSET) return flow.direction.value\n    let oldDirection = flow.direction.value\n    flow.direction.value = direction\n    dispatchInternalEvent(flow, 'direction', direction, oldDirection)\n    return flow\n  }\n  flow.direction.value = flow.create.defaults.direction\n  merge(DIRECTION, flow.direction)\n\n  /**\n   * Emit a node to traverse the flow tree.\n   *\n   * In nflow `nodes` and `events` are the same type of objects.\n   * An event is a node that gets detached from the parent, traverses the tree (see {@tutorial propagation}) and gets delivered to all listeners (see {@tutorial namespacing}).\n   * > The `.emit` API has **3 distinct behaviours**:\n   * ```js\n   * foo.emit() // turns foo into an event and emits it\n   * foo.emit('bar') // creates bar and emits it on foo\n   * foo.emit(anotherNode) // reparents anotherNode to foo and emits it\n   * ```\n   * Essentially, the following two operations are the same:\n   * ```js\n   * foo.emit('bar')\n   * foo.create('bar').emit()\n   * ```\n   *\n   * #### Listener Context\n   * Listeners are always invoked in the context of the emitted event:\n   * ```js\n   * .on('price-update', function(d){\n   *   this // refers to the emitted event\n   *   this.data() // === d\n   *   this.name() // === 'price-update'\n   * })\n   * ```\n   *\n   * Since **events are also flow objects**, you can dispatch further events on them! ({@tutorial event-chain})\n   * @param  {String} [name] The name of the event\n   * @param {...object} [data] optional data stored on the event\n   * @returns {flow} the emitted event\n   * @tutorial event-chain\n   * @tutorial propagation\n   * @tutorial namespacing\n   * @emits 'flow.emit'\n   * @emits 'flow.parent.emit'\n   * @emits 'flow.children.emit'\n   * @emits 'flow.emitted'\n   * @emits 'flow.parent.emitted'\n   * @emits 'flow.children.emitted'\n   */\n  flow.emit = (name = UNSET, ...args) => {\n    return emit(name, args)\n  }\n  flow.emit.recipients = []\n  flow.emit.recipientsMap = {}\n  createEmitAPI(flow)\n  /**\n   *\n   * Dispatched when a node is about to be emitted.\n   * @event 'flow.emit'\n   * @property {flow} parent - The emitter, ie. the parent of the emitted node.\n   * @property {flow} flow - the emitted node.\n   * @see flow.parent\n   */\n  /**\n   *\n   * Dispatched when one of the node's parents is about to be emitted.\n   * @event 'flow.parent.emit'\n   * @property {flow} parent - The emitter, ie. the parent of the emitted node.\n   * @property {flow} flow - the emitted node.\n   * @see flow.emit\n   */\n  /**\n   *\n   * Dispatched when ove of the node's children(recursive) is about to be emitted.\n   * @event 'flow.children.emit'\n   * @property {flow} parent - The emitter, ie. the parent of the emitted node.\n   * @property {flow} flow - the emitted node.\n   * @see flow.emit\n   */\n  /**\n   *\n   * Dispatched after a node has been emitted.\n   * @event 'flow.emitted'\n   * @property {flow} parent - The emitter, ie. the parent of the emitted node.\n   * @property {flow} flow - the emitted node.\n   * @see flow.parent\n   */\n  /**\n   *\n   * Dispatched after one of the node's parents has been emitted.\n   * @event 'flow.parent.emitted'\n   * @property {flow} parent - The emitter, ie. the parent of the emitted node.\n   * @property {flow} flow - the emitted node.\n   * @see flow.emit\n   */\n  /**\n   *\n   * Dispatched after one of the node's children(recursive) has been emitted.\n   * @event 'flow.children.emitted'\n   * @property {flow} parent - The emitter, ie. the parent of the emitted node.\n   * @property {flow} flow - the emitted node.\n   * @see flow.emit\n   */\n  function emit (name = UNSET, args, direction) {\n    if (name === UNSET) {\n      // emit current flow object\n      detach(flow)\n      let p = flow.parent() || flow\n      direction && flow.direction(direction)\n      dispatchInternalEvent(p, 'emit', flow)\n      p.emit.route(flow)\n      dispatchInternalEvent(p, 'emitted', flow)\n      return flow\n    }\n    if (isFlow(name)) {\n      // 1. reparent the passed in flow object where it's emitted from\n      name.parent(flow)\n      // 2.  emit the passed in flow object\n      detach(name)\n      direction && name.direction(direction)\n      args.length && name.data(...args)\n      dispatchInternalEvent(flow, 'emit', name)\n      flow.emit.route(name)\n      dispatchInternalEvent(flow, 'emitted', name)\n      return flow\n    }\n\n    // create and emit a new event\n    assert(typeof (name) !== 'string'\n      , ERRORS.invalidEventName)\n\n    var event = flow.create(name, ...args)\n    detach(event)\n    if (direction) event.direction.value = direction\n    dispatchInternalEvent(flow, 'emit', event)\n    flow.emit.route(event)\n    dispatchInternalEvent(flow, 'emitted', event)\n    return event\n  }\n\n  /**\n   * @internal\n   */\n  flow.emit.route = (event) => {\n    event.stopPropagation.value = false\n    event.status.set(STATUS.FLOWING)\n    let localName = getLocalName(event.name())\n    let matcher = f => f.on.listenerCache[localName]\n    event.emit.targets = flow.emit.route[event.direction()](event, matcher)\n      .concat(event.emit.targets || [])\n\n    while (event.emit.targets.length) {\n      var destination = event.emit.targets.shift()\n      if (event.isCancelled()) break\n      if (event.propagationStopped()) break\n      if (destination.flow.isCancelled()) continue\n      notify(event, destination)\n    }\n    if (!event.isCancelled() && !event.propagationStopped()) {\n      event.status.set(STATUS.COMPLETED)\n    }\n  }\n\n  Object.keys(routes).forEach(route => {\n    flow.emit.route[route] =\n    flow.emit.route[route.toUpperCase()] =\n      routes[route]\n  })\n\n  function notify (flow, currentNode) {\n    // only deliver once per node\n    if (flow.emit.recipientsMap[currentNode.flow.guid()]) return\n    if (isUnreachable(flow, currentNode)) return\n    flow.emit.recipientsMap[currentNode.flow.guid()] = flow.direction()\n    let result = currentNode.flow.on.notifyListeners(flow)\n    if (result) {\n      result.route = currentNode.route\n      result.direction = flow.direction()\n      flow.emit.recipients.push(result)\n    }\n  }\n\n  function isUnreachable (flow, destination) {\n    let modifiers = Object.keys(flow.stopPropagation.modifiers)\n    if (!modifiers.length) return false\n\n    let routeMap = destination.route.reduce((i, route) => {\n      i[route.flow.guid()] |= DIRECTION_BITMASK[route.direction]\n      return i\n    }, {})\n\n    return modifiers.some(guid => {\n      return routeMap[guid] === flow.stopPropagation.modifiers[guid]\n    })\n  }\n\n/*!\n *  create directional (eg. `flow.emit.dowsntream(...)`) API\n */\n  function createEmitAPI (flow) {\n    Object.keys(DIRECTION)\n    .forEach(direction => {\n      flow.emit[direction] =\n      flow.emit[direction.toLowerCase()] =\n        (name, ...args) => emit(name, args, direction)\n    })\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/behaviours/emit.js","import upstream from './upstream'\nimport current from './current'\nimport downstream from './downstream'\nimport _default from './default'\n\nexport default {\n  upstream,\n  downstream,\n  none: current, // deprecated\n  current,\n  'default': _default // IE8 compatibility fix\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/routes/index.js","import { createMatcher } from '../utils'\nimport {DIRECTION} from '../consts'\n\n/*\n *  returns: all parent nodes\n */\nexport default (flow, matcher) => {\n  let match = createMatcher(matcher)\n  return [flow]\n    .concat(flow.parents())\n    .map((flow, i, arr) => ({\n      flow,\n      route: arr.slice(0, i + 1)\n        .map(f => ({\n          flow: f,\n          direction: DIRECTION.UPSTREAM\n        }))\n    }))\n    .filter(f => match(f.flow))\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/routes/upstream.js","import { createMatcher } from '../utils'\nimport { DIRECTION } from '../consts'\n/*\n *  returns: only itself and the node emitting it\n */\nexport default (flow, matcher) => {\n  const match = createMatcher(matcher)\n  return [flow]\n    .concat(flow.parent())\n    .map((flow, i, arr) => ({\n      flow,\n      route: arr\n        .slice(0, i + 1)\n        .map((f, i) => ({\n          flow: f,\n          direction: i ? DIRECTION.UPSTREAM : DIRECTION.CURRENT\n        }))\n    }))\n    .filter(f => match(f.flow))\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/routes/current.js","import {DIRECTION} from '../consts'\nimport {createMatcher} from '../utils'\n\nexport default (flow, matcher) => {\n  let match = createMatcher(matcher)\n  let visitedNodesMap = {}\n  let parent = flow.parent()\n  let dir = f => {\n    if (f === flow) return DIRECTION.CURRENT\n    if (f === parent) return DIRECTION.UPSTREAM\n    return DIRECTION.DOWNSTREAM\n  }\n  let route = getChildren(flow, [])\n    .concat(getChildren(flow.parent()\n      , [{flow: flow, direction: dir(flow)}]))\n\n  return route\n  function getChildren (flow, route) {\n    if (visitedNodesMap[flow.guid()]) return []\n    visitedNodesMap[flow.guid()] = true\n    if (!match(flow)) return []\n    route = route.concat([{flow: flow, direction: dir(flow)}])\n    var nodes = [{ flow, route }]\n    flow.children.value\n      .forEach(f => (nodes = nodes.concat(getChildren(f, route))))\n    return nodes\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/routes/downstream.js","import {isDetached, createMatcher} from '../utils'\nimport {DIRECTION} from '../consts'\n\nexport default (flow, matcher) => {\n  let match = createMatcher(matcher)\n  var visitedNodesMap = {}\n  var route = []\n  var parents = [flow].concat(flow.parents())\n    .map((flow, i, arr) => ({\n      flow,\n      route: arr.slice(0, i + 1)\n        .map(f => ({\n          flow: f,\n          direction: DIRECTION.UPSTREAM\n        }))\n    }))\n\n  parents.forEach(f => {\n      // traverse downstream on detached nodes:\n    visitedNodesMap[f.flow.guid()] = true\n    match(f.flow) && route.push(f)\n\n    if (isDetached(f.flow)) {\n      route = route.concat(getChildren(f.flow, f.route))\n    }\n  })\n  return route\n\n  function getChildren (flow, route) {\n    var visited = (visitedNodesMap[flow.guid()])\n    visitedNodesMap[flow.guid()] = true\n    if (!match(flow)) return []\n    var nodes = visited ? [] : [{ flow, route }]\n    flow.children.value\n      .forEach(f => {\n        nodes = nodes\n          .concat(getChildren(f, route\n            .concat([{flow: f, direction: DIRECTION.DOWNSTREAM}]\n          )))\n      })\n    return nodes\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/routes/default.js","import { ERRORS\n       , UNSET } from '../consts'\nimport { assert, dispatchInternalEvent } from '../utils'\n\nexport default (flow, defaults, name) => {\n  /**\n   * Return the unique ID of the node.\n   *\n   * @readonly\n   * @return {String} UUID4 identifier of the current node\n   */\n  flow.guid = (...args) => {\n    assert(args.length\n         , ERRORS.invalidGuid)\n    return flow.guid.value\n  }\n  flow.guid.value = createGuid()\n\n  /**\n   * Get/Set the name of a flow instance.\n   *\n   * #### Getter\n   * ```js\n   * .name() // returns the name of the current node\n   * ```\n   * #### Setter\n   * ```js\n   * .name('foo') // sets the name of the current node\n   * ```\n   * @param {string} name The name of the flow instance\n   * @returns {flow} flow (Setter) the current flow instance\n   * @returns {String} name (Getter) the name of the flow instance\n   * @emits 'flow.name'\n   * @emits 'flow.parent.name'\n   * @emits 'flow.children.name'\n   */\n  flow.name = (name = UNSET) => {\n    if (name === UNSET) return flow.name.value\n    assert(typeof (name) !== 'string'\n         , ERRORS.invalidName, name)\n    var previousName = flow.name.value\n    flow.name.value = name\n    flow.namespace.localName.cache = null\n    /**\n     *\n     * Dispatched when a node has been renamed.\n     * @event 'flow.name'\n     * @property {flow} flow - the renamed node.\n     * @property {flow} newName - the new name of the node\n     * @property {flow} oldName - the previous name of the node\n     * @see flow.name\n     */\n    /**\n     *\n     * Dispatched when one of the node's parents has been renamed.\n     * @event 'flow.parent.name'\n     * @property {flow} flow - the renamed node.\n     * @property {flow} newName - the new name of the node\n     * @property {flow} oldName - the previous name of the node\n     * @see flow.name\n     */\n    /**\n     *\n     * Dispatched when ove of the node's children(recursive) has been renamed.\n     * @event 'flow.children.name'\n     * @property {flow} flow - the renamed node.\n     * @property {flow} newName - the new name of the node\n     * @property {flow} oldName - the previous name of the node\n     * @see flow.name\n     */\n    dispatchInternalEvent(flow, 'name', name, previousName)\n    return flow\n  }\n  flow.name.value = name || ''\n  flow.name.isFlow = true\n  flow.name.isInternal = false\n\n  flow.call = (...functions) => {\n    functions\n      .filter(f => typeof (f) === 'function')\n      .forEach(f => f.call(flow, flow))\n    return flow\n  }\n}\n\nfunction createGuid () {\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'\n    .replace(/[xy]/g, c => {\n      let r = Math.random() * 16 | 0\n      let v = c === 'x' ? r : (r & 0x3 | 0x8)\n      return v.toString(16)\n    })\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/behaviours/identify.js","import { ERRORS, UNSET, STATUS, DIRECTION_BITMASK } from '../consts'\nimport { assert, dispatchInternalEvent, invalidateListenerCache } from '../utils'\n\nexport default (flow) => {\n  /**\n   * Register one or more listeners on the current node.\n   *\n   * The listener will be invoked if an emitted flow object's name matches the listener name.\n   *\n   * #### How to delete event listeners\n   * Simply set the handler to `null`:\n   * ```js\n   * f.on('price-update', null)\n   * ```\n   *\n   * > **Note:**\n   * Setting a new listener on the same event name deletes the existing listener(s):\n   * ```js\n   * f.on('register-user', validateName)\n   * f.on('register-user', validateEmail) // this will delete validateName!\n   * ```\n   *\n   * #### How to register multiple event handlers on the same event\n   * ```js\n   * flow.on('register-user', validateName\n   *                        , validateEmail\n   *                        , validatePassword\n   *                        , registerUser)\n   * ```\n   * If you specify multiple listeners, they will called in sequential order.\n   *\n   * @param  {String} [name] the name of the listener\n   * @param  {...function} [listeners] The callback function(s) to be invoked.\n   * @return {flow} the current flow object\n   * @tutorial propagation\n   * @tutorial namespacing\n   * @example\n   * services\n   *  .create('user-service')\n   *  .on('login'   , login)\n   *  .on('logout'  , logout)\n   *  .on('register', validateName\n   *                , validateEmail\n   *                , validatePassword\n   *                , register)\n   *  @emits 'flow.listenerAdded'\n   *  @emits 'flow.children.listenerAdded'\n   *  @emits 'flow.parent.listenerAdded'\n   *  @emits 'flow.listenerChanged'\n   *  @emits 'flow.children.listenerChanged'\n   *  @emits 'flow.parent.listenerChanged'\n   *  @emits 'flow.listenerRemoved'\n   *  @emits 'flow.children.listenerRemoved'\n   *  @emits 'flow.parent.listenerRemoved'\n   */\n  flow.on = (name = UNSET, ...args) => {\n    if (name === UNSET) return flow.on.listenerMap\n    assert(typeof (name) !== 'string'\n      , ERRORS.invalidListener)\n\n    if (!args.length) {\n      return flow.on.listenerMap[name]\n    }\n\n    if (args.length === 1 && args[0] === null) {\n      delete flow.on.listenerMap[name]\n      invalidateListenerCache(flow)\n      /**\n       *\n       * Dispatched when one or more listeners have been removed from the node.\n       * @event 'flow.listenerRemoved'\n       * @property {flow} flow - the affected node.\n       * @property {object} changes - the changes applied to the node\n       * @property {object} changes.name - the name of the listener removed\n       * @see flow.on\n       */\n      /**\n       *\n       * Dispatched when one or more listeners have been removed from the node's parents.\n       * @event 'flow.parent.listenerRemoved'\n       * @property {flow} flow - the affected node.\n       * @property {object} changes - the changes applied to the node\n       * @property {object} changes.name - the name of the listener removed\n       * @see flow.on\n       */\n      /**\n       *\n       * Dispatched when one or more listeners have been removed from the node's children(recursive)\n       * @event 'flow.children.listenerRemoved'\n       * @property {flow} flow - the affected node.\n       * @property {object} changes - the changes applied to the node\n       * @property {object} changes.name - the name of the listener removed\n       * @see flow.on\n       */\n      dispatchInternalEvent(flow, 'listenerRemoved', {name})\n      return flow\n    }\n    var oldListeners = flow.on.listenerMap[name]\n    flow.on.listenerMap[name] = args\n      .filter(l => !assert(typeof (l) !== 'function'\n        , ERRORS.invalidListenerType, typeof (l) + ': ' + l)\n      )\n    invalidateListenerCache(flow)\n    /**\n     *\n     * Dispatched when one or more listeners have been added to the node.\n     * @event 'flow.listenerAdded'\n     * @property {flow} flow - the affected node.\n     * @property {object} changes - the changes applied to the node\n     * @property {object} changes.name - the name of the listener added\n     * @see flow.on\n     */\n    /**\n     *\n     * Dispatched when one or more listeners have been added to the node's parents.\n     * @event 'flow.parent.listenerAdded'\n     * @property {flow} flow - the affected node.\n     * @property {object} changes - the changes applied to the node\n     * @property {object} changes.name - the name of the listener added\n     * @see flow.on\n     */\n    /**\n     *\n     * Dispatched when one or more listeners have been added to the node's children(recursive)\n     * @event 'flow.children.listenerAdded'\n     * @property {flow} flow - the affected node.\n     * @property {object} changes - the changes applied to the node\n     * @property {object} changes.name - the name of the listener added\n     * @see flow.on\n     */\n    /**\n     *\n     * Dispatched when one or more listeners have been changed on the node.\n     * @event 'flow.listenerChanged'\n     * @property {flow} flow - the affected node.\n     * @property {object} changes - the changes applied to the node\n     * @property {object} changes.name - the name of the changed listener\n     * @see flow.on\n     */\n    /**\n     *\n     * Dispatched when one or more listeners have been changed on the node's parents.\n     * @event 'flow.parent.listenerChanged'\n     * @property {flow} flow - the affected node.\n     * @property {object} changes - the changes applied to the node\n     * @property {object} changes.name - the name of the changed listener\n     * @see flow.on\n     */\n    /**\n     *\n     * Dispatched when one or more listeners have been changed on the node's children(recursive)\n     * @event 'flow.children.listenerChanged'\n     * @property {flow} flow - the affected node.\n     * @property {object} changes - the changes applied to the node\n     * @property {object} changes.name - the name of the changed listener\n     * @see flow.on\n     */\n    dispatchInternalEvent(flow, oldListeners\n      ? 'listenerChanged'\n      : 'listenerAdded'\n      , {name, handlers: args})\n    return flow\n  }\n  flow.on.listenerMap = {}\n  flow.on.listenerCache = {}\n\n  flow.on.notifyListeners = (event) => {\n    let keys = Object.keys(flow.on.listenerMap)\n    let listeners = []\n    event.target = flow\n    keys.forEach(listenerName => {\n      let shouldDeliver = event.namespace.match(flow, listenerName)\n      if (shouldDeliver) {\n        let handlers = flow.on.listenerMap[listenerName]\n        listeners.push({\n          name: listenerName,\n          handlers: deliverToHandlers(event, handlers, flow)\n        })\n      }\n    })\n    delete event.target\n    return listeners.length\n      ? { flow, listeners }\n      : null\n  }\n}\n\nfunction deliverToHandlers (event, handlers, flow) {\n  return handlers\n    .map(listener => {\n      let l = {\n        listener\n      }\n      if (event.status() !== STATUS.FLOWING) {\n        l.status = event.status()\n        return l\n      }\n      if (event.stopPropagation.modifiers[flow.guid.value] &\n        DIRECTION_BITMASK.CURRENT) {\n        l.status = 'SKIPPED'\n        return l\n      }\n      l.status = 'DELIVERED'\n      listener.apply(event, event.data.value)\n      return l\n    })\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/behaviours/listen.js","import { serialise } from '../utils'\n\nexport default (flow) => {\n  /**\n   * JSON Stringified version of {@link flow.toObj} for logging and debugging.\n   * @see flow.toObj\n   * @memberof flow\n   * @param  {String[]} props - The {@link flow} properties to include in the serialisation.\n   * ```\n   * let counter = nflow.create('counter-service')\n   *  .data({ counter: 5 })\n   *\n   * counter.toObj('name', 'data')\n   * // -> '{ \"name\": \"timer-service\", \"counter\": \"5\"}'\n   * ```\n   * Available properties:\n   * - `\"name\"` - see {@link flow.name}\n   * - `\"guid\"` - see {@link flow.guid}\n   * - `\"version\"` - see {@link flow.version}\n   * - `\"data\"` - see {@link flow.data}\n   * - `\"status\"` - see {@link flow.status}\n   * - `\"parent\"` - see {@link flow.parent}\n   * - `\"listeners\"` - see {@link flow.on}\n   * - `\"children\"` - see {@link flow.children}\n   * - `\"recipients\"` - see {@link flow.emit.recipients}\n   * @return {String} Serialised and JSON Stringified representation of the current node.\n   */\n  flow.toString = (...args) => {\n    return JSON.stringify(flow.toObj(...args))\n  }\n  /**\n   * Serialise the flow node into a json object\n   * @param  {String[]} props - The {@link flow} properties to include in the serialisation.\n   * ```\n   * let counter = nflow.create('counter-service')\n   *  .data({ counter: 5 })\n   *\n   * counter.toObj('name', 'data')\n   * // -> { \"name\": \"timer-service\", \"counter\": \"5\"}\n   * ```\n   * Available properties:\n   * - `\"name\"` - see {@link flow.name}\n   * - `\"guid\"` - see {@link flow.guid}\n   * - `\"version\"` - see {@link flow.version}\n   * - `\"data\"` - see {@link flow.data}\n   * - `\"status\"` - see {@link flow.status}\n   * - `\"parent\"` - see {@link flow.parent}\n   * - `\"listeners\"` - see {@link flow.on}\n   * - `\"children\"` - see {@link flow.children}\n   * - `\"recipients\"` - see {@link flow.emit.recipients}\n   * @return {Object} Serialised JSON representation of the {@link flow} node\n   */\n  flow.toObj = (...args) => {\n    const props = args.reduce((a, b) => { a[b] = 1; return a }, {})\n    const hasProp = prop => !args.length || props[prop]\n    const add = (name, valueF) => { if (hasProp(name)) obj[name] = valueF() }\n    let obj = {}\n\n    add('name', flow.name)\n    add('guid', flow.guid)\n    add('version', () => flow.version)\n    add('status', flow.status)\n    add('data', () => serialise(flow.data()))\n    add('parent', () => ({\n      name: flow.parent.value && flow.parent.value.name.value,\n      guid: flow.parent.value && flow.parent.value.guid.value\n    }))\n    add('listeners', () => {\n      const l = flow.on()\n      let o = {}\n      Object.keys(l)\n        .forEach(key => {\n          o[key] = l[key].map(f => f.name || 'function')\n        })\n      return o\n    })\n    add('children', () => flow.children.value\n      .map(f => f.toObj('name', 'guid')))\n\n    add('recipients', () => {\n      return flow.emit.recipients &&\n      flow.emit.recipients.map(f => ({\n        direction: f.direction,\n        flow: f.flow.toObj('name', 'guid'),\n        route: f.route.map(f => ({\n          flow: f.flow.toObj('name', 'guid'),\n          direction: f.direction\n        })),\n        listeners: f.listeners.map(l => ({\n          name: l.name,\n          handlers: l.handlers.map(h => ({\n            status: h.status,\n            listener: serialise(h.listener)\n          }))\n        }))\n      }))\n    })\n    return obj\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/behaviours/loggable.js","import { dispatchInternalEvent } from '../utils'\n\nexport default (flow, defaults, name, data) => {\n  /**\n   * `Get` or `Set` the current node's data.\n   *\n   * Every {@link flow} node has an internal data storage for storing state.\n   * @param  {...object} [data] - the data to be stored in the node\n   * @return {object|object[]} (Getter) the data stored in the node.\n   * If multiple objects are stored in the node, they are returned as an array:\n   * ```js\n   * let foo = nflow.create('foo')\n   *   .data({a:5}, \"somethingElse\")\n   *\n   * foo.data() // [{a:5}, \"somethingElse\"]\n   * ```\n   * @return {flow} (Setter) The current node\n   * @emits 'flow.data'\n   * @emits 'flow.parent.data'\n   * @emits 'flow.children.data'\n   */\n  flow.data = (...data) => {\n    if (!data.length) {\n      return (flow.data.value.length <= 1)\n        ? flow.data.value[0]\n        : flow.data.value\n    }\n    var oldData = flow.data.value\n    flow.data.value = data\n    /**\n     *\n     * Dispatched when the data of the node has been changed.\n     * @event 'flow.data'\n     * @property {flow} flow - the node that stores the data\n     * @property {object} newData - The new data stored in the node\n     * @property {object} oldData - The old data stored in the node\n     * @see flow.data\n     */\n    /**\n     *\n     * Dispatched when the data of a parent node has changed\n     * @event 'flow.parent.data'\n     * @property {flow} flow - the node that stores the data\n     * @property {object} newData - The new data stored in the node\n     * @property {object} oldData - The old data stored in the node\n     * @see flow.data\n     */\n    /**\n     *\n     * Dispatched when the data of a child(recursive) node has changed\n     * @event 'flow.children.data'\n     * @property {flow} flow - the node that stores the data\n     * @property {object} newData - The new data stored in the node\n     * @property {object} oldData - The old data stored in the node\n     * @see flow.data\n     */\n    dispatchInternalEvent(flow, 'data'\n      , (data.length > 1 ? data : data[0])\n      , (oldData.length > 1 ? oldData : oldData[0]))\n    return flow\n  }\n  flow.data.value = data\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/behaviours/stateful.js","/* globals VERSION */\nimport { assert, dispatchInternalEvent } from '../utils'\nimport { ERRORS } from '../consts'\n\nexport default (flow, defaults) => {\n  /**\n   * The stats API is for configuring {@link flow} nodes for debugging.\n   * ```\n   * nflow.create('noisy-timer-service')\n   *  .stats({ ignore: true })\n   * ```\n   * @param  {*} data - configuration options\n   * @param  {Boolean} data.ignore - do not track this node in the debugger/visualiser\n   * @param  {Boolean} data.collapsed - collapse this node by default in the visualiser\n   * @param  {String} data.description - extra description of the node to show in the visualiser\n   * @return {flow} the current node.\n   */\n  flow.stats = (d) => {\n    if (d === undefined) return flow.stats.value\n    assert(typeof (d) !== 'object'\n         , ERRORS.invalidStatsArgs)\n    let previousStats = flow.stats.value\n    /* jshint ignore:start */\n    flow.stats.value = {...flow.stats.value, ...d}\n    /* jshint ignore:end */\n    dispatchInternalEvent(flow, 'stats', flow.stats.value, previousStats)\n    return flow\n  }\n\n  flow.stats.value = {\n    ignore: false, // do not track this node\n    collapsed: false\n  }\n\n  flow.version = VERSION\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/behaviours/stats.js","import { assert, dispatchInternalEvent } from '../utils'\nimport { ERRORS } from '../consts'\n\nexport default (flow, defaults) => {\n  /* jshint ignore:start */\n  /**\n   * Dispose the current {@link flow} node.\n   * Use this operation if the node is no longer needed.\n   *\n   * Disposing a node has the following effects:\n   *  - Disposed nodes cannot receive events.\n   *  - Disposed nodes cannot emit events.\n   *  - Disposed nodes cannot propagate events.\n   *  - Disposed nodes are unparented\n   *  - <b>All child nodes</b> of a disposed node <b>are also disposed recursively</b>.<br>\n   *\n   * Unless the application holds a reference to the node, disposed nodes are **eligible for garbage collection**.\n   *\n   * This operation is final, disposed nodes cannot be re-activated.\n   *  @return {flow} the disposed node\n   *  @emits 'flow.dispose'\n   *  @emits 'flow.children.dispose'\n   *  @emits 'flow.parent.dispose'\n   */\n    /* jshint ignore:end */\n  flow.dispose = (...args) => {\n    assert(args.length\n         , ERRORS.invalidDisposeArgs)\n    if (flow.dispose.value === true) return\n\n    // recursively(depth first) dispose all downstream nodes\n    flow.children.value.forEach(f => f.dispose())\n    /**\n     *\n     * Dispatched when a node is about to be disposed.\n     * @event 'flow.dispose'\n     * @property {flow} flow - the node to be disposed.\n     * @see flow.dispose\n     * @example\n     * nflow.create('timer-service')\n     *   .on('flow.dispose', stopTimer)\n     */\n    /**\n     *\n     * Dispatched when one of the node's parents is about to be disposed.\n     * @event 'flow.parent.dispose'\n     * @property {flow} flow - the node to be disposed.\n     * @see flow.dispose\n     */\n    /**\n     *\n     * Dispatched when ove of the node's children(recursive) is about to be disposed.\n     * @internal\n     * @event 'flow.children.dispose'\n     * @property {flow} flow - the node to be disposed.\n     * @see flow.dispose\n     */\n    dispatchInternalEvent(flow, 'dispose', true)\n    flow.parent(null)\n    flow.dispose.value = true\n    flow.on.listenerMap = {}\n\n    return flow\n  }\n  flow.dispose.value = false\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/behaviours/disposable.js","import { assert, getLocalName } from '../utils'\nimport { ERRORS, NS_SEPARATOR } from '../consts'\n\nexport default (flow, defaults, name, data) => {\n  /**\n   * **Getter only**.\n   * Return the full namespace of the node including:\n   *  - implicit namespace identifiers (see {@link flow.namespace.implicit}),\n   *  - explicit namespace identifiers (see {@link flow.namespace.explicit})\n   *  - and the local name. (see {@link flow.namespace.localName})\n   *\n   * ```\n   * let foo = nflow\n   *   .create('a')\n   *   .create('b')\n   *   .create('x:y:foo')\n   *\n   * foo.namespace() // -> \"nflow:a:b:x:y:foo\"\n   * ```\n   * @tutorial namespacing\n   * @return {String} The full namespace of the node\n   */\n  flow.namespace = (...args) => {\n    assert(args.length, ERRORS.invalidNamespaceArgs)\n    return flow.namespace.path()\n      .map(f => f.name())\n      .join(NS_SEPARATOR)\n  }\n\n  /**\n   * **Getter only**.\n   * Return all {@link flow} nodes that form the current node's namespace\n   * ```js\n   * let a = nflow.create('a')\n   * let b = a.create('b')\n   * let foo = b.create('x:y:foo')\n   *\n   * a.namespace() // -> [nflow, a]\n   * foo.namespace() // -> [nflow, a, b, foo]\n   * ```\n   * @tutorial namespacing\n   * @alias namespace.path\n   * @memberof flow\n   * @return {flow[]} Array of nodes that make up the current node's full namespace\n   */\n  flow.namespace.path = (...args) => {\n    assert(args.length, ERRORS.invalidNamespaceArgs)\n    return flow\n      .parents()\n      .reverse()\n      .concat(flow)\n  }\n\n  /**\n   * Return the implicit namespace segment of the current node.\n   *\n   * A node's implicit namespace is defined by the node's parents:\n   * ```js\n   * let a = nflow.create('a')\n   * let b = a.create('b')\n   * let foo = b.create('x:y:foo')\n   *\n   * a.namespace.implicit() // -> [\"nflow\"]\n   * foo.namespace.implicit() // -> [\"nflow\", \"a\", \"b\"]\n   * ```\n   * @alias namespace.implicit\n   * @memberof flow\n   * @return {String[]} The implicit namespace segment of the node\n   */\n  flow.namespace.implicit = (...args) => {\n    assert(args.length, ERRORS.invalidNamespaceArgs)\n    return flow\n      .parents()\n      .reverse()\n      .map(f => f.name())\n  }\n  /**\n   * Return the `explicit` namespace segment of the node.\n   * The explicit namespace segment is given as part of the node's {@link flow.name|name}\n   * ```\n   * let foo = nflow.create(a:b:foo)\n   * foo.namespace.explicit() // \"a:b\"\n   * ```\n   * @alias namespace.explicit\n   * @memberof flow\n   * @return {String} The explicit namespace identifier of the node\n   */\n  flow.namespace.explicit = (...args) => {\n    assert(args.length, ERRORS.invalidNamespaceArgs)\n    let ns = flow\n      .name()\n      .split(NS_SEPARATOR)\n    ns.pop()\n    return ns\n  }\n\n  /**\n   * Return the `local name` segment of the node.\n   * The local name is the node's name, minus any explicit namespace given as part of the node's {@link flow.name|name}.\n   * ```\n   * let foo = nflow.create(a:b:foo)\n   * foo.namespace.localName() // \"foo\"\n   * ```\n   * @see flow.namespace.explicit\n   * @alias namespace.localName\n   * @memberof flow\n   * @return {String} The explicit namespace identifier of the node\n   */\n  flow.namespace.localName = (...args) => {\n    assert(args.length, ERRORS.invalidNamespaceArgs)\n    if (flow.namespace.localName.cache === null) {\n      flow.namespace.localName.cache = flow\n      .name()\n      .split(NS_SEPARATOR)\n      .pop()\n    }\n    return flow.namespace.localName.cache\n  }\n  flow.namespace.localName.cache = null\n  /**\n   * **Getter only**.\n   * Return the full namespace of the node including:\n   *  - implicit namespace identifiers (see {@link flow.namespace.implicit}),\n   *  - explicit namespace identifiers (see {@link flow.namespace.explicit})\n   *  - and the local name. (see {@link flow.namespace.localName})\n   *\n   * ```\n   * let foo = nflow\n   *   .create('a')\n   *   .create('b')\n   *   .create('x:y:foo')\n   *\n   * foo.namespace.full() // -> [\"nflow\", \"a\", \"b\", \"x\", \"y\", \"foo\"]\n   * ```\n   * @tutorial namespacing\n   * @return {String[]} The full namespace of the node\n   * @alias namespace.full\n   * @memberof flow\n   * */\n  flow.namespace.full = (...args) => {\n    assert(args.length, ERRORS.invalidNamespaceArgs)\n    return flow.namespace().split(NS_SEPARATOR)\n  }\n\n  /**\n   * @internal\n   * Checks if the emitted event and the receiving node are in compatible namespaces.\n   * An event can be delivered if the following checks pass:\n   *  - the local names are the same\n   *  - the full NS of the sender contains the explicit NS of the receiver\n   *  - the full NS of the receiver contains the explicit NS of the sender\n   * @param  {flow} listenerNode The node receiving the event\n   * @param  {String} listenerName the name of the event, optionally including the explicit namespace, eg.:`x:y:foo`\n   * @return {Boolean} true if the event can be delivered to the receiving node\n   */\n  flow.namespace.match = (listenerNode, listenerName) => {\n    assert(\n       typeof (listenerName) !== 'string'\n     , ERRORS.invalidListener\n     , listenerName)\n\n    // 1. Check that the local names match\n    if (!isLocalNameMatch({id: flow.namespace.localName(), f: flow}, listenerName)) return false\n    // 2. Check that the receiver's explicit NS matches the sender's NS\n    if (!isNamespaceMatch(flow, flow.name(), listenerNode.namespace.localise(listenerName))) return false\n    // 2. Check that the sender's explicit NS matches the receiver's NS\n    if (!isNamespaceMatch(listenerNode, listenerName, flow.namespace.localise(flow.name()))) return false\n    return true\n  }\n\n  /*\n   * Checks if the node's FULL NS matches the name's explicit identifiers\n   * @param  {flow}  node the node to get the full NS from\n   * @param  {String}  localisedNameTo The node name to get the explicit identifiers from\n   * @return {Boolean} true if the name's explicit identifiers sit inside the node's NS\n   */\n  function isNamespaceMatch (node, nameFrom, localisedNameTo) {\n    let fullIDs = nameFrom\n      .split(NS_SEPARATOR)\n      .map(id => ({ id, f: node }))\n      .reverse()\n      .concat(node\n        .parents()\n        .map(f => ({ id: f.name(), f }))\n      )\n\n    let explicitIDs = localisedNameTo.split(NS_SEPARATOR).reverse()\n    return explicitIDs.every(segment => {\n      let foundSegment = false\n      while (fullIDs.length) {\n        let p = fullIDs.shift()\n        if (isLocalNameMatch(p, segment)) {\n          foundSegment = true\n          break\n        }\n      }\n      return foundSegment\n    })\n  }\n\n  /**\n   * Resolves a listener name(ie. explicit ns + local name) to a localised one,\n   * replacing generic namespace identifiers with explicit guid-s\n   * @example\n   * let foo = flow\n   *  .create('x')\n   *  .create('y')\n   *  .create('x:z:foo')\n   *  foo.namespace.localise() // -> '{guid-of-x}:z:foo'\n   * @param  {String} listenerName The name of the listener, optionally including the explicit ns\n   * @return {String} The localised Namespace\n   */\n  flow.namespace.localise = (ns) => {\n    assert(\n       typeof (ns) !== 'string'\n     , ERRORS.invalidListener\n     , ns)\n\n    let segments = ns.split(NS_SEPARATOR)\n    if (segments.length > 1 &&\n      flow.parents.has(segments[0])) {\n      segments[0] = flow.parents.get(segments[0]).guid()\n    }\n\n    return segments.join(NS_SEPARATOR)\n  }\n}\n\n/*\n * Checks if the local name of the sender and receiver nodes are the same\n * @param  {String}  senderLocalName    The name of the emitted event\n * @param  {String}  receiverLocalName The name of the listener\n * @return {Boolean} true if the local names are the same\n */\nfunction isLocalNameMatch ({id, f}, receiverName) {\n  const receiverLocalName = getLocalName(receiverName)\n\n  const match = id === '*' ||\n    receiverLocalName === '*' ||\n    f.guid() === receiverLocalName ||\n    id === receiverLocalName\n\n  return match\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/behaviours/namespace.js"],"sourceRoot":""}